;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;#include <stdio.h>
;
;#define k1 PIND.3==0
;#define k2 PIND.4==0
;#define back PIND.5==0
;#define rel1 PORTD.1
;#define rel2 PORTD.2
;#define on 1
;#define off 0
;
;
;
;
;float t;
;char str[17];
;unsigned char low,high;
;
;
;
;
;enum e_type{
;    menue,
;    temp,
;    set} menu;
;
;
;
;
;
;
;
;
;unsigned int adc_data;
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// ADC interrupt service routine
;interrupt [ADC_INT] void adc_isr(void)
; 0000 002A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002B // Read the AD conversion result
; 0000 002C adc_data=ADCW;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002D }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;// Read the AD conversion result
;// with noise canceling
;unsigned int read_adc(unsigned char adc_input)
; 0000 0032 {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0033 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $00000016 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0034 // Delay needed for the stabilization of the ADC input voltage
; 0000 0035 delay_us(10);
;PCODE: $0000001A VOL: 0
; 0000 0036 #asm
;PCODE: $0000001B VOL: 0
; 0000 0037     in   r30,mcucr
    in   r30,mcucr
;PCODE: $0000001C VOL: 0
; 0000 0038     cbr  r30,__sm_mask
    cbr  r30,__sm_mask
;PCODE: $0000001D VOL: 0
; 0000 0039     sbr  r30,__se_bit | __sm_adc_noise_red
    sbr  r30,__se_bit | __sm_adc_noise_red
;PCODE: $0000001E VOL: 0
; 0000 003A     out  mcucr,r30
    out  mcucr,r30
;PCODE: $0000001F VOL: 0
; 0000 003B     sleep
    sleep
;PCODE: $00000020 VOL: 0
; 0000 003C     cbr  r30,__se_bit
    cbr  r30,__se_bit
;PCODE: $00000021 VOL: 0
; 0000 003D     out  mcucr,r30
    out  mcucr,r30
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003E #endasm
; 0000 003F return adc_data;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0040 }
;PCODE: $00000027 VOL: 0
;
;void init(void);
;
;void main(void){
; 0000 0044 void main(void){
;PCODE: $00000028 VOL: 0
; 0000 0045     init();
;PCODE: $00000029 VOL: 0
; 0000 0046 
; 0000 0047 
; 0000 0048     while (1){
;PCODE: $0000002A VOL: 0
; 0000 0049         switch(menu){
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 004A             case menue:
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 004B                 lcd_gotoxy(0,0);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 004C                 lcd_putsf("1-Temp");
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 004D                 lcd_gotoxy(0,1);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004E                 lcd_putsf("2-Set");
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004F 
; 0000 0050                 if(k1){
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0051                     delay_ms(150);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0052                     while(k1);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0053                     menu=temp;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0054                     lcd_clear();
;PCODE: $0000004B VOL: 0
; 0000 0055                 }
; 0000 0056 
; 0000 0057                 if(k2){
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0058                     delay_ms(150);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0059                     while(k2);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005A                     menu=set;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005B                     lcd_clear();
;PCODE: $0000005B VOL: 0
; 0000 005C                 }
; 0000 005D 
; 0000 005E             break;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005F 
; 0000 0060             case temp:
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0061                 t=read_adc(0);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0062                 t=t*500/1023;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0063                 sprintf(str,"Temp:%0.2f \xdf C",t);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0064                 lcd_gotoxy(0,0);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0065                 lcd_puts(str);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0066 
; 0000 0067                 sprintf(str,"H:%02d    L:%02d",high,low);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0068                 lcd_gotoxy(0,1);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0069                 lcd_puts(str);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 006A 
; 0000 006B                 if(t>high){
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 006C                     rel1=1;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006D                     rel2=0;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006E                 }
; 0000 006F 
; 0000 0070                 if((t<high)&&(t>low)){
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0071                     rel1=0;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0072                     rel2=0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0073                 }
; 0000 0074 
; 0000 0075                 if(t<low){
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0076                     rel1=0;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0077                     rel2=1;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0078                 }
; 0000 0079 
; 0000 007A                 if(high==low){
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 007B                     rel1=0;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 007C                     rel2=0;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 007D                 }
; 0000 007E 
; 0000 007F                 if(back){
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0080                     delay_ms(150);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0081                     while(back);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0082                     menu=menue;
;PCODE: $000000CE VOL: 0
; 0000 0083                     lcd_clear();
;PCODE: $000000CF VOL: 0
; 0000 0084                 }
; 0000 0085             break;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0086             case set:
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0087                 sprintf(str,"H:%02d    L:%02d",high,low);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0088                 lcd_gotoxy(0,0);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0089                 lcd_puts(str);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 008A 
; 0000 008B                 if(k1){
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 008C                     delay_ms(150);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 008D                     high++;
;PCODE: $000000F0 VOL: 0
; 0000 008E                     high=high==100 ? 0:high;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 008F                 }
; 0000 0090 
; 0000 0091                 if(k2){
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0092                     delay_ms(150);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0093                     low++;
;PCODE: $00000102 VOL: 0
; 0000 0094                     low=low==100 ? 0:low;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0095                 }
; 0000 0096 
; 0000 0097                 if(back){
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0098                     delay_ms(150);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0099                     while(back);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 009A                     menu=menue;
;PCODE: $0000011A VOL: 0
; 0000 009B                     lcd_clear();
;PCODE: $0000011B VOL: 0
; 0000 009C                 }
; 0000 009D 
; 0000 009E 
; 0000 009F 
; 0000 00A0 
; 0000 00A1 
; 0000 00A2         }
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00A3     }
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00A4 }
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;
;void init(void){
; 0000 00A6 void init(void){
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00A7 // Declare your local variables here
; 0000 00A8 
; 0000 00A9 // Input/Output Ports initialization
; 0000 00AA // Port A initialization
; 0000 00AB // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00AC DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00AD // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00AE PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00AF 
; 0000 00B0 // Port B initialization
; 0000 00B1 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00B2 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00B3 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00B4 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00B5 
; 0000 00B6 // Port C initialization
; 0000 00B7 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 00B8 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B9 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00BA PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00BB 
; 0000 00BC // Port D initialization
; 0000 00BD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=In
; 0000 00BE DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (1<<DDD2) | (1<<DDD1) | (0<<DDD0);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00BF // State: Bit7=T Bit6=T Bit5=P Bit4=P Bit3=P Bit2=0 Bit1=0 Bit0=T
; 0000 00C0 PORTD=(0<<PORTD7) | (0<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00C1 
; 0000 00C2 // Timer/Counter 0 initialization
; 0000 00C3 // Clock source: System Clock
; 0000 00C4 // Clock value: Timer 0 Stopped
; 0000 00C5 // Mode: Normal top=0xFF
; 0000 00C6 // OC0 output: Disconnected
; 0000 00C7 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00C8 TCNT0=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00C9 OCR0=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00CA 
; 0000 00CB // Timer/Counter 1 initialization
; 0000 00CC // Clock source: System Clock
; 0000 00CD // Clock value: Timer1 Stopped
; 0000 00CE // Mode: Normal top=0xFFFF
; 0000 00CF // OC1A output: Disconnected
; 0000 00D0 // OC1B output: Disconnected
; 0000 00D1 // Noise Canceler: Off
; 0000 00D2 // Input Capture on Falling Edge
; 0000 00D3 // Timer1 Overflow Interrupt: Off
; 0000 00D4 // Input Capture Interrupt: Off
; 0000 00D5 // Compare A Match Interrupt: Off
; 0000 00D6 // Compare B Match Interrupt: Off
; 0000 00D7 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00D8 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00D9 TCNT1H=0x00;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00DA TCNT1L=0x00;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 00DB ICR1H=0x00;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00DC ICR1L=0x00;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00DD OCR1AH=0x00;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00DE OCR1AL=0x00;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00DF OCR1BH=0x00;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00E0 OCR1BL=0x00;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00E1 
; 0000 00E2 // Timer/Counter 2 initialization
; 0000 00E3 // Clock source: System Clock
; 0000 00E4 // Clock value: Timer2 Stopped
; 0000 00E5 // Mode: Normal top=0xFF
; 0000 00E6 // OC2 output: Disconnected
; 0000 00E7 ASSR=0<<AS2;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00E8 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00E9 TCNT2=0x00;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 00EA OCR2=0x00;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 00EB 
; 0000 00EC // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00ED TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00EE 
; 0000 00EF // External Interrupt(s) initialization
; 0000 00F0 // INT0: Off
; 0000 00F1 // INT1: Off
; 0000 00F2 // INT2: Off
; 0000 00F3 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00F4 MCUCSR=(0<<ISC2);
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00F5 
; 0000 00F6 // USART initialization
; 0000 00F7 // USART disabled
; 0000 00F8 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00F9 
; 0000 00FA // Analog Comparator initialization
; 0000 00FB // Analog Comparator: Off
; 0000 00FC // The Analog Comparator's positive input is
; 0000 00FD // connected to the AIN0 pin
; 0000 00FE // The Analog Comparator's negative input is
; 0000 00FF // connected to the AIN1 pin
; 0000 0100 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0101 
; 0000 0102 // ADC initialization
; 0000 0103 // ADC Clock frequency: 62.500 kHz
; 0000 0104 // ADC Voltage Reference: AREF pin
; 0000 0105 // ADC Auto Trigger Source: ADC Stopped
; 0000 0106 ADMUX=ADC_VREF_TYPE;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 0107 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0108 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0109 
; 0000 010A // SPI initialization
; 0000 010B // SPI disabled
; 0000 010C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 010D 
; 0000 010E // TWI initialization
; 0000 010F // TWI disabled
; 0000 0110 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 0111 
; 0000 0112 // Alphanumeric LCD initialization
; 0000 0113 // Connections are specified in the
; 0000 0114 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0115 // RS - PORTB Bit 1
; 0000 0116 // RD - PORTB Bit 2
; 0000 0117 // EN - PORTB Bit 3
; 0000 0118 // D4 - PORTB Bit 4
; 0000 0119 // D5 - PORTB Bit 5
; 0000 011A // D6 - PORTB Bit 6
; 0000 011B // D7 - PORTB Bit 7
; 0000 011C // Characters/line: 16
; 0000 011D lcd_init(16);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 011E 
; 0000 011F // Global enable interrupts
; 0000 0120 #asm("sei")
;PCODE: $0000016D VOL: 0
	sei
;PCODE: $0000016E VOL: 0
; 0000 0121 }
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
