
AVRASM ver. 2.1.30  F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm Sun Jul 02 16:02:20 2023

F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1088): warning: Register r5 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1090): warning: Register r7 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1091): warning: Register r8 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1092): warning: Register r9 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1093): warning: Register r6 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1094): warning: Register r11 already defined by the .DEF directive
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1095): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _low=R5
                 	.DEF _high=R4
                 	.DEF _menu=R7
                 	.DEF _adc_data=R8
                 	.DEF _adc_data_msb=R9
                 	.DEF __lcd_x=R6
                 	.DEF __lcd_y=R11
                 	.DEF __lcd_maxx=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0052 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 007f 	JMP  _adc_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 2d31
00002b 6554
00002c 706d
00002d 3200      	.DB  0x31,0x2D,0x54,0x65,0x6D,0x70,0x0,0x32
00002e 532d
00002f 7465
000030 5400
000031 6d65      	.DB  0x2D,0x53,0x65,0x74,0x0,0x54,0x65,0x6D
000032 3a70
000033 3025
000034 322e
000035 2066      	.DB  0x70,0x3A,0x25,0x30,0x2E,0x32,0x66,0x20
000036 20df
000037 0043
000038 3a48
000039 3025      	.DB  0xDF,0x20,0x43,0x0,0x48,0x3A,0x25,0x30
00003a 6432
00003b 2020
00003c 2020
00003d 3a4c      	.DB  0x32,0x64,0x20,0x20,0x20,0x20,0x4C,0x3A
00003e 3025
00003f 6432
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1132): warning: .cseg .db misalignment - padding zero byte
000040 0000      	.DB  0x25,0x30,0x32,0x64,0x0
                 _0x2000003:
000041 c080      	.DB  0x80,0xC0
                 _0x2020000:
000042 4e2d
000043 4e41
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1136): warning: .cseg .db misalignment - padding zero byte
000044 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1138): warning: .cseg .db misalignment - padding zero byte
000045 0001      	.DB  0x1
                 _0x20A0000:
000046 4e2d
000047 4e41
000048 4900
000049 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
F:\Electronic\Najafi class\AVR\Codes\J9_2 (Digital thermostat)\Debug\List\1.asm(1141): warning: .cseg .db misalignment - padding zero byte
00004a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00004b 0002      	.DW  0x02
00004c 0275      	.DW  __base_y_G100
00004d 0082      	.DW  _0x2000003*2
                 
00004e 0001      	.DW  0x01
00004f 0279      	.DW  __seed_G105
000050 008a      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000051 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000052 94f8      	CLI
000053 27ee      	CLR  R30
000054 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000055 e0f1      	LDI  R31,1
000056 bffb      	OUT  GICR,R31
000057 bfeb      	OUT  GICR,R30
000058 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000059 e08d      	LDI  R24,(14-2)+1
00005a e0a2      	LDI  R26,2
00005b 27bb      	CLR  R27
                 __CLEAR_REG:
00005c 93ed      	ST   X+,R30
00005d 958a      	DEC  R24
00005e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000060 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000061 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000062 93ed      	ST   X+,R30
000063 9701      	SBIW R24,1
000064 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000065 e9e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000066 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000067 9185      	LPM  R24,Z+
000068 9195      	LPM  R25,Z+
000069 9700      	SBIW R24,0
00006a f061      	BREQ __GLOBAL_INI_END
00006b 91a5      	LPM  R26,Z+
00006c 91b5      	LPM  R27,Z+
00006d 9005      	LPM  R0,Z+
00006e 9015      	LPM  R1,Z+
00006f 01bf      	MOVW R22,R30
000070 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000071 9005      	LPM  R0,Z+
000072 920d      	ST   X+,R0
000073 9701      	SBIW R24,1
000074 f7e1      	BRNE __GLOBAL_INI_LOOP
000075 01fb      	MOVW R30,R22
000076 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000077 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000078 bfed      	OUT  SPL,R30
000079 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007d 940c 0093 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define k1 PIND.3==0
                 ;#define k2 PIND.4==0
                 ;#define back PIND.5==0
                 ;#define rel1 PORTD.1
                 ;#define rel2 PORTD.2
                 ;#define on 1
                 ;#define off 0
                 ;
                 ;
                 ;
                 ;
                 ;float t;
                 ;char str[17];
                 ;unsigned char low,high;
                 ;
                 ;
                 ;
                 ;
                 ;enum e_type{
                 ;    menue,
                 ;    temp,
                 ;    set} menu;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;unsigned int adc_data;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// ADC interrupt service routine
                 ;interrupt [ADC_INT] void adc_isr(void)
                 ; 0000 002A {
                 
                 	.CSEG
                 _adc_isr:
                 ; .FSTART _adc_isr
                 ; 0000 002B // Read the AD conversion result
                 ; 0000 002C adc_data=ADCW;
                +
00007f b084     +IN R8 , 4
000080 b095     +IN R9 , 4 + 1
                 	__INWR 8,9,4
                 ; 0000 002D }
000081 9518      	RETI
                 ; .FEND
                 ;
                 ;// Read the AD conversion result
                 ;// with noise canceling
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0032 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0033 ADMUX=adc_input | ADC_VREF_TYPE;
000082 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000083 81e8      	LD   R30,Y
000084 64e0      	ORI  R30,0x40
000085 b9e7      	OUT  0x7,R30
                 ; 0000 0034 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0035 delay_us(10);
                +
000086 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000087 958a     +DEC R24
000088 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0036 #asm
                 ; 0000 0037     in   r30,mcucr
000089 b7e5          in   r30,mcucr
                 ; 0000 0038     cbr  r30,__sm_mask
00008a 78ef          cbr  r30,__sm_mask
                 ; 0000 0039     sbr  r30,__se_bit | __sm_adc_noise_red
00008b 69e0          sbr  r30,__se_bit | __sm_adc_noise_red
                 ; 0000 003A     out  mcucr,r30
00008c bfe5          out  mcucr,r30
                 ; 0000 003B     sleep
00008d 9588          sleep
                 ; 0000 003C     cbr  r30,__se_bit
00008e 77ef          cbr  r30,__se_bit
                 ; 0000 003D     out  mcucr,r30
00008f bfe5          out  mcucr,r30
                 ; 0000 003E #endasm
                 ; 0000 003F return adc_data;
000090 01f4      	MOVW R30,R8
000091 940c 021e 	JMP  _0x20C0006
                 ; 0000 0040 }
                 ; .FEND
                 ;
                 ;void init(void);
                 ;
                 ;void main(void){
                 ; 0000 0044 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 0045     init();
000093 d0bf      	RCALL _init
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048     while (1){
                 _0x3:
                 ; 0000 0049         switch(menu){
000094 2de7      	MOV  R30,R7
000095 e0f0      	LDI  R31,0
                 ; 0000 004A             case menue:
000096 9730      	SBIW R30,0
000097 f4f9      	BRNE _0x9
                 ; 0000 004B                 lcd_gotoxy(0,0);
000098 940e 0689 	CALL SUBOPT_0x0
                 ; 0000 004C                 lcd_putsf("1-Temp");
                +
00009a e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00009b e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00009c d142      	RCALL _lcd_putsf
                 ; 0000 004D                 lcd_gotoxy(0,1);
00009d e0e0      	LDI  R30,LOW(0)
00009e 93ea      	ST   -Y,R30
00009f e0a1      	LDI  R26,LOW(1)
0000a0 d101      	RCALL _lcd_gotoxy
                 ; 0000 004E                 lcd_putsf("2-Set");
                +
0000a1 e5ab     +LDI R26 , LOW ( 2 * _0x0 + ( 7 ) )
0000a2 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW2FN _0x0,7
0000a3 d13b      	RCALL _lcd_putsf
                 ; 0000 004F 
                 ; 0000 0050                 if(k1){
0000a4 9983      	SBIC 0x10,3
0000a5 c007      	RJMP _0xA
                 ; 0000 0051                     delay_ms(150);
0000a6 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 0052                     while(k1);
                 _0xB:
0000a8 9b83      	SBIS 0x10,3
0000a9 cffe      	RJMP _0xB
                 ; 0000 0053                     menu=temp;
0000aa e0e1      	LDI  R30,LOW(1)
0000ab 2e7e      	MOV  R7,R30
                 ; 0000 0054                     lcd_clear();
0000ac d102      	RCALL _lcd_clear
                 ; 0000 0055                 }
                 ; 0000 0056 
                 ; 0000 0057                 if(k2){
                 _0xA:
0000ad 9984      	SBIC 0x10,4
0000ae c007      	RJMP _0xE
                 ; 0000 0058                     delay_ms(150);
0000af 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 0059                     while(k2);
                 _0xF:
0000b1 9b84      	SBIS 0x10,4
0000b2 cffe      	RJMP _0xF
                 ; 0000 005A                     menu=set;
0000b3 e0e2      	LDI  R30,LOW(2)
0000b4 2e7e      	MOV  R7,R30
                 ; 0000 005B                     lcd_clear();
0000b5 d0f9      	RCALL _lcd_clear
                 ; 0000 005C                 }
                 ; 0000 005D 
                 ; 0000 005E             break;
                 _0xE:
0000b6 c09a      	RJMP _0x8
                 ; 0000 005F 
                 ; 0000 0060             case temp:
                 _0x9:
0000b7 30e1      	CPI  R30,LOW(0x1)
0000b8 e0a0      	LDI  R26,HIGH(0x1)
0000b9 07fa      	CPC  R31,R26
0000ba f009      	BREQ PC+2
0000bb c069      	RJMP _0x12
                 ; 0000 0061                 t=read_adc(0);
0000bc e0a0      	LDI  R26,LOW(0)
0000bd dfc4      	RCALL _read_adc
0000be e6a0      	LDI  R26,LOW(_t)
0000bf e0b2      	LDI  R27,HIGH(_t)
0000c0 2766      	CLR  R22
0000c1 2777      	CLR  R23
0000c2 940e 0845 	CALL __CDF1
0000c4 940e 09f7 	CALL __PUTDP1
                 ; 0000 0062                 t=t*500/1023;
0000c6 940e 0692 	CALL SUBOPT_0x2
                +
0000c8 e0e0     +LDI R30 , LOW ( 0x43FA0000 )
0000c9 e0f0     +LDI R31 , HIGH ( 0x43FA0000 )
0000ca ef6a     +LDI R22 , BYTE3 ( 0x43FA0000 )
0000cb e473     +LDI R23 , BYTE4 ( 0x43FA0000 )
                 	__GETD1N 0x43FA0000
0000cc 940e 08cf 	CALL __MULF12
0000ce 01df      	MOVW R26,R30
0000cf 01cb      	MOVW R24,R22
                +
0000d0 e0e0     +LDI R30 , LOW ( 0x447FC000 )
0000d1 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
0000d2 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
0000d3 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
0000d4 940e 091d 	CALL __DIVF21
0000d6 93e0 0260 	STS  _t,R30
0000d8 93f0 0261 	STS  _t+1,R31
0000da 9360 0262 	STS  _t+2,R22
0000dc 9370 0263 	STS  _t+3,R23
                 ; 0000 0063                 sprintf(str,"Temp:%0.2f \xdf C",t);
0000de 940e 069b 	CALL SUBOPT_0x3
                +
0000e0 e6e1     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000e1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000e2 93fa      	ST   -Y,R31
0000e3 93ea      	ST   -Y,R30
0000e4 91e0 0260 	LDS  R30,_t
0000e6 91f0 0261 	LDS  R31,_t+1
0000e8 9160 0262 	LDS  R22,_t+2
0000ea 9170 0263 	LDS  R23,_t+3
0000ec 940e 0a0b 	CALL __PUTPARD1
0000ee e084      	LDI  R24,4
0000ef 940e 0546 	CALL _sprintf
0000f1 9628      	ADIW R28,8
                 ; 0000 0064                 lcd_gotoxy(0,0);
0000f2 940e 0689 	CALL SUBOPT_0x0
                 ; 0000 0065                 lcd_puts(str);
0000f4 940e 06a0 	CALL SUBOPT_0x4
                 ; 0000 0066 
                 ; 0000 0067                 sprintf(str,"H:%02d    L:%02d",high,low);
0000f6 940e 069b 	CALL SUBOPT_0x3
0000f8 940e 06a4 	CALL SUBOPT_0x5
                 ; 0000 0068                 lcd_gotoxy(0,1);
0000fa e0e0      	LDI  R30,LOW(0)
0000fb 93ea      	ST   -Y,R30
0000fc e0a1      	LDI  R26,LOW(1)
0000fd d0a4      	RCALL _lcd_gotoxy
                 ; 0000 0069                 lcd_puts(str);
0000fe 940e 06a0 	CALL SUBOPT_0x4
                 ; 0000 006A 
                 ; 0000 006B                 if(t>high){
000100 940e 06b9 	CALL SUBOPT_0x6
000102 f009      	BREQ PC+2
000103 f408      	BRCC PC+2
000104 c002      	RJMP _0x13
                 ; 0000 006C                     rel1=1;
000105 9a91      	SBI  0x12,1
                 ; 0000 006D                     rel2=0;
000106 9892      	CBI  0x12,2
                 ; 0000 006E                 }
                 ; 0000 006F 
                 ; 0000 0070                 if((t<high)&&(t>low)){
                 _0x13:
000107 940e 06b9 	CALL SUBOPT_0x6
000109 f430      	BRSH _0x19
00010a 940e 06c3 	CALL SUBOPT_0x7
00010c f009      	BREQ PC+2
00010d f408      	BRCC PC+2
00010e c001      	RJMP _0x19
00010f c001      	RJMP _0x1A
                 _0x19:
000110 c002      	RJMP _0x18
                 _0x1A:
                 ; 0000 0071                     rel1=0;
000111 9891      	CBI  0x12,1
                 ; 0000 0072                     rel2=0;
000112 9892      	CBI  0x12,2
                 ; 0000 0073                 }
                 ; 0000 0074 
                 ; 0000 0075                 if(t<low){
                 _0x18:
000113 940e 06c3 	CALL SUBOPT_0x7
000115 f410      	BRSH _0x1F
                 ; 0000 0076                     rel1=0;
000116 9891      	CBI  0x12,1
                 ; 0000 0077                     rel2=1;
000117 9a92      	SBI  0x12,2
                 ; 0000 0078                 }
                 ; 0000 0079 
                 ; 0000 007A                 if(high==low){
                 _0x1F:
000118 1454      	CP   R5,R4
000119 f411      	BRNE _0x24
                 ; 0000 007B                     rel1=0;
00011a 9891      	CBI  0x12,1
                 ; 0000 007C                     rel2=0;
00011b 9892      	CBI  0x12,2
                 ; 0000 007D                 }
                 ; 0000 007E 
                 ; 0000 007F                 if(back){
                 _0x24:
00011c 9985      	SBIC 0x10,5
00011d c006      	RJMP _0x29
                 ; 0000 0080                     delay_ms(150);
00011e 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 0081                     while(back);
                 _0x2A:
000120 9b85      	SBIS 0x10,5
000121 cffe      	RJMP _0x2A
                 ; 0000 0082                     menu=menue;
000122 2477      	CLR  R7
                 ; 0000 0083                     lcd_clear();
000123 d08b      	RCALL _lcd_clear
                 ; 0000 0084                 }
                 ; 0000 0085             break;
                 _0x29:
000124 c02c      	RJMP _0x8
                 ; 0000 0086             case set:
                 _0x12:
000125 30e2      	CPI  R30,LOW(0x2)
000126 e0a0      	LDI  R26,HIGH(0x2)
000127 07fa      	CPC  R31,R26
000128 f541      	BRNE _0x8
                 ; 0000 0087                 sprintf(str,"H:%02d    L:%02d",high,low);
000129 940e 069b 	CALL SUBOPT_0x3
00012b 940e 06a4 	CALL SUBOPT_0x5
                 ; 0000 0088                 lcd_gotoxy(0,0);
00012d 940e 0689 	CALL SUBOPT_0x0
                 ; 0000 0089                 lcd_puts(str);
00012f 940e 06a0 	CALL SUBOPT_0x4
                 ; 0000 008A 
                 ; 0000 008B                 if(k1){
000131 9983      	SBIC 0x10,3
000132 c00a      	RJMP _0x2E
                 ; 0000 008C                     delay_ms(150);
000133 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 008D                     high++;
000135 9443      	INC  R4
                 ; 0000 008E                     high=high==100 ? 0:high;
000136 e6e4      	LDI  R30,LOW(100)
000137 15e4      	CP   R30,R4
000138 f411      	BRNE _0x2F
000139 e0e0      	LDI  R30,LOW(0)
00013a c001      	RJMP _0x30
                 _0x2F:
00013b 2de4      	MOV  R30,R4
                 _0x30:
00013c 2e4e      	MOV  R4,R30
                 ; 0000 008F                 }
                 ; 0000 0090 
                 ; 0000 0091                 if(k2){
                 _0x2E:
00013d 9984      	SBIC 0x10,4
00013e c00a      	RJMP _0x32
                 ; 0000 0092                     delay_ms(150);
00013f 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 0093                     low++;
000141 9453      	INC  R5
                 ; 0000 0094                     low=low==100 ? 0:low;
000142 e6e4      	LDI  R30,LOW(100)
000143 15e5      	CP   R30,R5
000144 f411      	BRNE _0x33
000145 e0e0      	LDI  R30,LOW(0)
000146 c001      	RJMP _0x34
                 _0x33:
000147 2de5      	MOV  R30,R5
                 _0x34:
000148 2e5e      	MOV  R5,R30
                 ; 0000 0095                 }
                 ; 0000 0096 
                 ; 0000 0097                 if(back){
                 _0x32:
000149 9985      	SBIC 0x10,5
00014a c006      	RJMP _0x36
                 ; 0000 0098                     delay_ms(150);
00014b 940e 068e 	CALL SUBOPT_0x1
                 ; 0000 0099                     while(back);
                 _0x37:
00014d 9b85      	SBIS 0x10,5
00014e cffe      	RJMP _0x37
                 ; 0000 009A                     menu=menue;
00014f 2477      	CLR  R7
                 ; 0000 009B                     lcd_clear();
000150 d05e      	RCALL _lcd_clear
                 ; 0000 009C                 }
                 ; 0000 009D 
                 ; 0000 009E 
                 ; 0000 009F 
                 ; 0000 00A0 
                 ; 0000 00A1 
                 ; 0000 00A2         }
                 _0x36:
                 _0x8:
                 ; 0000 00A3     }
000151 cf42      	RJMP _0x3
                 ; 0000 00A4 }
                 _0x3A:
000152 cfff      	RJMP _0x3A
                 ; .FEND
                 ;
                 ;void init(void){
                 ; 0000 00A6 void init(void){
                 _init:
                 ; .FSTART _init
                 ; 0000 00A7 // Declare your local variables here
                 ; 0000 00A8 
                 ; 0000 00A9 // Input/Output Ports initialization
                 ; 0000 00AA // Port A initialization
                 ; 0000 00AB // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00AC DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000153 e0e0      	LDI  R30,LOW(0)
000154 bbea      	OUT  0x1A,R30
                 ; 0000 00AD // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00AE PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000155 bbeb      	OUT  0x1B,R30
                 ; 0000 00AF 
                 ; 0000 00B0 // Port B initialization
                 ; 0000 00B1 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00B2 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000156 bbe7      	OUT  0x17,R30
                 ; 0000 00B3 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00B4 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000157 bbe8      	OUT  0x18,R30
                 ; 0000 00B5 
                 ; 0000 00B6 // Port C initialization
                 ; 0000 00B7 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 00B8 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000158 bbe4      	OUT  0x14,R30
                 ; 0000 00B9 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 00BA PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000159 bbe5      	OUT  0x15,R30
                 ; 0000 00BB 
                 ; 0000 00BC // Port D initialization
                 ; 0000 00BD // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=In
                 ; 0000 00BE DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (1<<DDD2) | (1<<DDD1) | (0<<DDD0);
00015a e0e6      	LDI  R30,LOW(6)
00015b bbe1      	OUT  0x11,R30
                 ; 0000 00BF // State: Bit7=T Bit6=T Bit5=P Bit4=P Bit3=P Bit2=0 Bit1=0 Bit0=T
                 ; 0000 00C0 PORTD=(0<<PORTD7) | (0<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00015c e3e8      	LDI  R30,LOW(56)
00015d bbe2      	OUT  0x12,R30
                 ; 0000 00C1 
                 ; 0000 00C2 // Timer/Counter 0 initialization
                 ; 0000 00C3 // Clock source: System Clock
                 ; 0000 00C4 // Clock value: Timer 0 Stopped
                 ; 0000 00C5 // Mode: Normal top=0xFF
                 ; 0000 00C6 // OC0 output: Disconnected
                 ; 0000 00C7 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
00015e e0e0      	LDI  R30,LOW(0)
00015f bfe3      	OUT  0x33,R30
                 ; 0000 00C8 TCNT0=0x00;
000160 bfe2      	OUT  0x32,R30
                 ; 0000 00C9 OCR0=0x00;
000161 bfec      	OUT  0x3C,R30
                 ; 0000 00CA 
                 ; 0000 00CB // Timer/Counter 1 initialization
                 ; 0000 00CC // Clock source: System Clock
                 ; 0000 00CD // Clock value: Timer1 Stopped
                 ; 0000 00CE // Mode: Normal top=0xFFFF
                 ; 0000 00CF // OC1A output: Disconnected
                 ; 0000 00D0 // OC1B output: Disconnected
                 ; 0000 00D1 // Noise Canceler: Off
                 ; 0000 00D2 // Input Capture on Falling Edge
                 ; 0000 00D3 // Timer1 Overflow Interrupt: Off
                 ; 0000 00D4 // Input Capture Interrupt: Off
                 ; 0000 00D5 // Compare A Match Interrupt: Off
                 ; 0000 00D6 // Compare B Match Interrupt: Off
                 ; 0000 00D7 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000162 bdef      	OUT  0x2F,R30
                 ; 0000 00D8 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000163 bdee      	OUT  0x2E,R30
                 ; 0000 00D9 TCNT1H=0x00;
000164 bded      	OUT  0x2D,R30
                 ; 0000 00DA TCNT1L=0x00;
000165 bdec      	OUT  0x2C,R30
                 ; 0000 00DB ICR1H=0x00;
000166 bde7      	OUT  0x27,R30
                 ; 0000 00DC ICR1L=0x00;
000167 bde6      	OUT  0x26,R30
                 ; 0000 00DD OCR1AH=0x00;
000168 bdeb      	OUT  0x2B,R30
                 ; 0000 00DE OCR1AL=0x00;
000169 bdea      	OUT  0x2A,R30
                 ; 0000 00DF OCR1BH=0x00;
00016a bde9      	OUT  0x29,R30
                 ; 0000 00E0 OCR1BL=0x00;
00016b bde8      	OUT  0x28,R30
                 ; 0000 00E1 
                 ; 0000 00E2 // Timer/Counter 2 initialization
                 ; 0000 00E3 // Clock source: System Clock
                 ; 0000 00E4 // Clock value: Timer2 Stopped
                 ; 0000 00E5 // Mode: Normal top=0xFF
                 ; 0000 00E6 // OC2 output: Disconnected
                 ; 0000 00E7 ASSR=0<<AS2;
00016c bde2      	OUT  0x22,R30
                 ; 0000 00E8 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00016d bde5      	OUT  0x25,R30
                 ; 0000 00E9 TCNT2=0x00;
00016e bde4      	OUT  0x24,R30
                 ; 0000 00EA OCR2=0x00;
00016f bde3      	OUT  0x23,R30
                 ; 0000 00EB 
                 ; 0000 00EC // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00ED TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000170 bfe9      	OUT  0x39,R30
                 ; 0000 00EE 
                 ; 0000 00EF // External Interrupt(s) initialization
                 ; 0000 00F0 // INT0: Off
                 ; 0000 00F1 // INT1: Off
                 ; 0000 00F2 // INT2: Off
                 ; 0000 00F3 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000171 bfe5      	OUT  0x35,R30
                 ; 0000 00F4 MCUCSR=(0<<ISC2);
000172 bfe4      	OUT  0x34,R30
                 ; 0000 00F5 
                 ; 0000 00F6 // USART initialization
                 ; 0000 00F7 // USART disabled
                 ; 0000 00F8 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000173 b9ea      	OUT  0xA,R30
                 ; 0000 00F9 
                 ; 0000 00FA // Analog Comparator initialization
                 ; 0000 00FB // Analog Comparator: Off
                 ; 0000 00FC // The Analog Comparator's positive input is
                 ; 0000 00FD // connected to the AIN0 pin
                 ; 0000 00FE // The Analog Comparator's negative input is
                 ; 0000 00FF // connected to the AIN1 pin
                 ; 0000 0100 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000174 e8e0      	LDI  R30,LOW(128)
000175 b9e8      	OUT  0x8,R30
                 ; 0000 0101 
                 ; 0000 0102 // ADC initialization
                 ; 0000 0103 // ADC Clock frequency: 62.500 kHz
                 ; 0000 0104 // ADC Voltage Reference: AREF pin
                 ; 0000 0105 // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0106 ADMUX=ADC_VREF_TYPE;
000176 e4e0      	LDI  R30,LOW(64)
000177 b9e7      	OUT  0x7,R30
                 ; 0000 0107 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
000178 e8ef      	LDI  R30,LOW(143)
000179 b9e6      	OUT  0x6,R30
                 ; 0000 0108 SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
00017a e0e0      	LDI  R30,LOW(0)
00017b bfe0      	OUT  0x30,R30
                 ; 0000 0109 
                 ; 0000 010A // SPI initialization
                 ; 0000 010B // SPI disabled
                 ; 0000 010C SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
00017c b9ed      	OUT  0xD,R30
                 ; 0000 010D 
                 ; 0000 010E // TWI initialization
                 ; 0000 010F // TWI disabled
                 ; 0000 0110 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
00017d bfe6      	OUT  0x36,R30
                 ; 0000 0111 
                 ; 0000 0112 // Alphanumeric LCD initialization
                 ; 0000 0113 // Connections are specified in the
                 ; 0000 0114 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0115 // RS - PORTB Bit 1
                 ; 0000 0116 // RD - PORTB Bit 2
                 ; 0000 0117 // EN - PORTB Bit 3
                 ; 0000 0118 // D4 - PORTB Bit 4
                 ; 0000 0119 // D5 - PORTB Bit 5
                 ; 0000 011A // D6 - PORTB Bit 6
                 ; 0000 011B // D7 - PORTB Bit 7
                 ; 0000 011C // Characters/line: 16
                 ; 0000 011D lcd_init(16);
00017e e1a0      	LDI  R26,LOW(16)
00017f d072      	RCALL _lcd_init
                 ; 0000 011E 
                 ; 0000 011F // Global enable interrupts
                 ; 0000 0120 #asm("sei")
000180 9478      	sei
                 ; 0000 0121 }
000181 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000182 93aa      	ST   -Y,R26
000183 b3e8      	IN   R30,0x18
000184 70ef      	ANDI R30,LOW(0xF)
000185 2fae      	MOV  R26,R30
000186 81e8      	LD   R30,Y
000187 7fe0      	ANDI R30,LOW(0xF0)
000188 2bea      	OR   R30,R26
000189 bbe8      	OUT  0x18,R30
                +
00018a e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00018b 958a     +DEC R24
00018c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00018d 9ac3      	SBI  0x18,3
                +
00018e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00018f 958a     +DEC R24
000190 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000191 98c3      	CBI  0x18,3
                +
000192 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000193 958a     +DEC R24
000194 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000195 c088      	RJMP _0x20C0006
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000196 93aa      	ST   -Y,R26
000197 81a8      	LD   R26,Y
000198 dfe9      	RCALL __lcd_write_nibble_G100
000199 81e8          ld    r30,y
00019a 95e2          swap  r30
00019b 83e8          st    y,r30
00019c 81a8      	LD   R26,Y
00019d dfe4      	RCALL __lcd_write_nibble_G100
                +
00019e e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00019f 958a     +DEC R24
0001a0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001a1 c07c      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001a2 93aa      	ST   -Y,R26
0001a3 81e8      	LD   R30,Y
0001a4 e0f0      	LDI  R31,0
0001a5 58eb      	SUBI R30,LOW(-__base_y_G100)
0001a6 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0001a7 81e0      	LD   R30,Z
0001a8 81a9      	LDD  R26,Y+1
0001a9 0fae      	ADD  R26,R30
0001aa dfeb      	RCALL __lcd_write_data
0001ab 8069      	LDD  R6,Y+1
0001ac 80b8      	LDD  R11,Y+0
0001ad 9622      	ADIW R28,2
0001ae 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001af e0a2      	LDI  R26,LOW(2)
0001b0 940e 06cd 	CALL SUBOPT_0x8
0001b2 e0ac      	LDI  R26,LOW(12)
0001b3 dfe2      	RCALL __lcd_write_data
0001b4 e0a1      	LDI  R26,LOW(1)
0001b5 940e 06cd 	CALL SUBOPT_0x8
0001b7 e0e0      	LDI  R30,LOW(0)
0001b8 2ebe      	MOV  R11,R30
0001b9 2e6e      	MOV  R6,R30
0001ba 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001bb 93aa      	ST   -Y,R26
0001bc 81a8      	LD   R26,Y
0001bd 30aa      	CPI  R26,LOW(0xA)
0001be f011      	BREQ _0x2000005
0001bf 146a      	CP   R6,R10
0001c0 f048      	BRLO _0x2000004
                 _0x2000005:
0001c1 e0e0      	LDI  R30,LOW(0)
0001c2 93ea      	ST   -Y,R30
0001c3 94b3      	INC  R11
0001c4 2dab      	MOV  R26,R11
0001c5 dfdc      	RCALL _lcd_gotoxy
0001c6 81a8      	LD   R26,Y
0001c7 30aa      	CPI  R26,LOW(0xA)
0001c8 f409      	BRNE _0x2000007
0001c9 c054      	RJMP _0x20C0006
                 _0x2000007:
                 _0x2000004:
0001ca 9463      	INC  R6
0001cb 9ac1      	SBI  0x18,1
0001cc 81a8      	LD   R26,Y
0001cd dfc8      	RCALL __lcd_write_data
0001ce 98c1      	CBI  0x18,1
0001cf c04e      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0001d0 93ba      	ST   -Y,R27
0001d1 93aa      	ST   -Y,R26
0001d2 931a      	ST   -Y,R17
                 _0x2000008:
0001d3 81a9      	LDD  R26,Y+1
0001d4 81ba      	LDD  R27,Y+1+1
0001d5 91ed      	LD   R30,X+
0001d6 83a9      	STD  Y+1,R26
0001d7 83ba      	STD  Y+1+1,R27
0001d8 2f1e      	MOV  R17,R30
0001d9 30e0      	CPI  R30,0
0001da f019      	BREQ _0x200000A
0001db 2fa1      	MOV  R26,R17
0001dc dfde      	RCALL _lcd_putchar
0001dd cff5      	RJMP _0x2000008
                 _0x200000A:
0001de c010      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0001df 93ba      	ST   -Y,R27
0001e0 93aa      	ST   -Y,R26
0001e1 931a      	ST   -Y,R17
                 _0x200000B:
0001e2 81e9      	LDD  R30,Y+1
0001e3 81fa      	LDD  R31,Y+1+1
0001e4 9631      	ADIW R30,1
0001e5 83e9      	STD  Y+1,R30
0001e6 83fa      	STD  Y+1+1,R31
0001e7 9731      	SBIW R30,1
0001e8 91e4      	LPM  R30,Z
0001e9 2f1e      	MOV  R17,R30
0001ea 30e0      	CPI  R30,0
0001eb f019      	BREQ _0x200000D
0001ec 2fa1      	MOV  R26,R17
0001ed dfcd      	RCALL _lcd_putchar
0001ee cff3      	RJMP _0x200000B
                 _0x200000D:
                 _0x20C0007:
0001ef 8118      	LDD  R17,Y+0
0001f0 9623      	ADIW R28,3
0001f1 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0001f2 93aa      	ST   -Y,R26
0001f3 b3e7      	IN   R30,0x17
0001f4 6fe0      	ORI  R30,LOW(0xF0)
0001f5 bbe7      	OUT  0x17,R30
0001f6 9abb      	SBI  0x17,3
0001f7 9ab9      	SBI  0x17,1
0001f8 9aba      	SBI  0x17,2
0001f9 98c3      	CBI  0x18,3
0001fa 98c1      	CBI  0x18,1
0001fb 98c2      	CBI  0x18,2
0001fc 80a8      	LDD  R10,Y+0
0001fd 81e8      	LD   R30,Y
0001fe 58e0      	SUBI R30,-LOW(128)
                +
0001ff 93e0 0277+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000201 81e8      	LD   R30,Y
000202 54e0      	SUBI R30,-LOW(192)
                +
000203 93e0 0278+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000205 e1a4      	LDI  R26,LOW(20)
000206 e0b0      	LDI  R27,0
000207 940e 07cf 	CALL _delay_ms
000209 940e 06d3 	CALL SUBOPT_0x9
00020b 940e 06d3 	CALL SUBOPT_0x9
00020d 940e 06d3 	CALL SUBOPT_0x9
00020f e2a0      	LDI  R26,LOW(32)
000210 df71      	RCALL __lcd_write_nibble_G100
                +
000211 ec88     +LDI R24 , LOW ( 200 )
000212 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000213 9701     +SBIW R24 , 1
000214 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000215 e2a8      	LDI  R26,LOW(40)
000216 df7f      	RCALL __lcd_write_data
000217 e0a4      	LDI  R26,LOW(4)
000218 df7d      	RCALL __lcd_write_data
000219 e8a5      	LDI  R26,LOW(133)
00021a df7b      	RCALL __lcd_write_data
00021b e0a6      	LDI  R26,LOW(6)
00021c df79      	RCALL __lcd_write_data
00021d df91      	RCALL _lcd_clear
                 _0x20C0006:
00021e 9621      	ADIW R28,1
00021f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000220 93ba      	ST   -Y,R27
000221 93aa      	ST   -Y,R26
000222 931a      	ST   -Y,R17
000223 930a      	ST   -Y,R16
000224 81aa      	LDD  R26,Y+2
000225 81bb      	LDD  R27,Y+2+1
000226 9612      	ADIW R26,2
000227 940e 09ed 	CALL __GETW1P
000229 9730      	SBIW R30,0
00022a f129      	BREQ _0x2020010
00022b 81aa      	LDD  R26,Y+2
00022c 81bb      	LDD  R27,Y+2+1
00022d 9614      	ADIW R26,4
00022e 940e 09ed 	CALL __GETW1P
000230 018f      	MOVW R16,R30
000231 9730      	SBIW R30,0
000232 f061      	BREQ _0x2020012
                +
000233 3002     +CPI R16 , LOW ( 2 )
000234 e0e0     +LDI R30 , HIGH ( 2 )
000235 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000236 f080      	BRLO _0x2020013
000237 01f8      	MOVW R30,R16
000238 9731      	SBIW R30,1
000239 018f      	MOVW R16,R30
                +
00023a 81aa     +LDD R26 , Y + 2
00023b 81bb     +LDD R27 , Y + 2 + 1
00023c 9614     +ADIW R26 , 4
00023d 93ed     +ST X + , R30
00023e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00023f 81aa      	LDD  R26,Y+2
000240 81bb      	LDD  R27,Y+2+1
000241 9612      	ADIW R26,2
000242 940e 06db 	CALL SUBOPT_0xA
000244 9731      	SBIW R30,1
000245 81ac      	LDD  R26,Y+4
000246 83a0      	STD  Z+0,R26
                 _0x2020013:
000247 81aa      	LDD  R26,Y+2
000248 81bb      	LDD  R27,Y+2+1
000249 940e 09ed 	CALL __GETW1P
00024b 23ff      	TST  R31
00024c f012      	BRMI _0x2020014
00024d 940e 06db 	CALL SUBOPT_0xA
                 _0x2020014:
00024f c006      	RJMP _0x2020015
                 _0x2020010:
000250 81aa      	LDD  R26,Y+2
000251 81bb      	LDD  R27,Y+2+1
000252 efef      	LDI  R30,LOW(65535)
000253 efff      	LDI  R31,HIGH(65535)
000254 93ed      	ST   X+,R30
000255 93fc      	ST   X,R31
                 _0x2020015:
000256 8119      	LDD  R17,Y+1
000257 8108      	LDD  R16,Y+0
000258 9625      	ADIW R28,5
000259 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
00025a 940e 06e1 	CALL SUBOPT_0xB
00025c e8e0      	LDI  R30,LOW(128)
00025d 83ea      	STD  Y+2,R30
00025e e3ef      	LDI  R30,LOW(63)
00025f 83eb      	STD  Y+3,R30
000260 940e 0a28 	CALL __SAVELOCR4
000262 85ee      	LDD  R30,Y+14
000263 85ff      	LDD  R31,Y+14+1
000264 3fef      	CPI  R30,LOW(0xFFFF)
000265 efaf      	LDI  R26,HIGH(0xFFFF)
000266 07fa      	CPC  R31,R26
000267 f449      	BRNE _0x2020019
000268 85e8      	LDD  R30,Y+8
000269 85f9      	LDD  R31,Y+8+1
00026a 93fa      	ST   -Y,R31
00026b 93ea      	ST   -Y,R30
                +
00026c e8a4     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
00026d e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
00026e 940e 057a 	CALL _strcpyf
000270 c0b7      	RJMP _0x20C0005
                 _0x2020019:
000271 3fef      	CPI  R30,LOW(0x7FFF)
000272 e7af      	LDI  R26,HIGH(0x7FFF)
000273 07fa      	CPC  R31,R26
000274 f449      	BRNE _0x2020018
000275 85e8      	LDD  R30,Y+8
000276 85f9      	LDD  R31,Y+8+1
000277 93fa      	ST   -Y,R31
000278 93ea      	ST   -Y,R30
                +
000279 e8a5     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
00027a e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
00027b 940e 057a 	CALL _strcpyf
00027d c0aa      	RJMP _0x20C0005
                 _0x2020018:
00027e 85ab      	LDD  R26,Y+11
00027f 30a7      	CPI  R26,LOW(0x7)
000280 f010      	BRLO _0x202001B
000281 e0e6      	LDI  R30,LOW(6)
000282 87eb      	STD  Y+11,R30
                 _0x202001B:
000283 851b      	LDD  R17,Y+11
                 _0x202001C:
000284 2fe1      	MOV  R30,R17
000285 5011      	SUBI R17,1
000286 30e0      	CPI  R30,0
000287 f019      	BREQ _0x202001E
000288 940e 06e8 	CALL SUBOPT_0xC
00028a cff9      	RJMP _0x202001C
                 _0x202001E:
                +
00028b 85ec     +LDD R30 , Y + 12
00028c 85fd     +LDD R31 , Y + 12 + 1
00028d 856e     +LDD R22 , Y + 12 + 2
00028e 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00028f 940e 0a22 	CALL __CPD10
000291 f421      	BRNE _0x202001F
000292 e030      	LDI  R19,LOW(0)
000293 940e 06e8 	CALL SUBOPT_0xC
000295 c02d      	RJMP _0x2020020
                 _0x202001F:
000296 853b      	LDD  R19,Y+11
000297 940e 06f7 	CALL SUBOPT_0xD
000299 f009      	BREQ PC+2
00029a f408      	BRCC PC+2
00029b c00b      	RJMP _0x2020021
00029c 940e 06e8 	CALL SUBOPT_0xC
                 _0x2020022:
00029e 940e 06f7 	CALL SUBOPT_0xD
0002a0 f028      	BRLO _0x2020024
0002a1 940e 0702 	CALL SUBOPT_0xE
0002a3 940e 0707 	CALL SUBOPT_0xF
0002a5 cff8      	RJMP _0x2020022
                 _0x2020024:
0002a6 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
0002a7 940e 06f7 	CALL SUBOPT_0xD
0002a9 f440      	BRSH _0x2020028
0002aa 940e 0702 	CALL SUBOPT_0xE
0002ac 940e 0713 	CALL SUBOPT_0x10
0002ae 940e 071a 	CALL SUBOPT_0x11
0002b0 5031      	SUBI R19,LOW(1)
0002b1 cff5      	RJMP _0x2020026
                 _0x2020028:
0002b2 940e 06e8 	CALL SUBOPT_0xC
                 _0x2020025:
                +
0002b4 85ec     +LDD R30 , Y + 12
0002b5 85fd     +LDD R31 , Y + 12 + 1
0002b6 856e     +LDD R22 , Y + 12 + 2
0002b7 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0002b8 940e 071f 	CALL SUBOPT_0x12
0002ba 940e 071a 	CALL SUBOPT_0x11
0002bc 940e 06f7 	CALL SUBOPT_0xD
0002be f020      	BRLO _0x2020029
0002bf 940e 0702 	CALL SUBOPT_0xE
0002c1 940e 0707 	CALL SUBOPT_0xF
                 _0x2020029:
                 _0x2020020:
0002c3 e010      	LDI  R17,LOW(0)
                 _0x202002A:
0002c4 85eb      	LDD  R30,Y+11
0002c5 17e1      	CP   R30,R17
0002c6 f1a8      	BRLO _0x202002C
                +
0002c7 81ac     +LDD R26 , Y + 4
0002c8 81bd     +LDD R27 , Y + 4 + 1
0002c9 818e     +LDD R24 , Y + 4 + 2
0002ca 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002cb 940e 0726 	CALL SUBOPT_0x13
0002cd 940e 071f 	CALL SUBOPT_0x12
0002cf 01df      	MOVW R26,R30
0002d0 01cb      	MOVW R24,R22
0002d1 940e 05d1 	CALL _floor
                +
0002d3 83ec     +STD Y + 4 , R30
0002d4 83fd     +STD Y + 4 + 1 , R31
0002d5 836e     +STD Y + 4 + 2 , R22
0002d6 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0002d7 940e 0702 	CALL SUBOPT_0xE
0002d9 940e 091d 	CALL __DIVF21
0002db 940e 080c 	CALL __CFD1U
0002dd 2f0e      	MOV  R16,R30
0002de 940e 072d 	CALL SUBOPT_0x14
0002e0 940e 0734 	CALL SUBOPT_0x15
0002e2 27ff      	CLR  R31
0002e3 2766      	CLR  R22
0002e4 2777      	CLR  R23
0002e5 940e 0845 	CALL __CDF1
                +
0002e7 81ac     +LDD R26 , Y + 4
0002e8 81bd     +LDD R27 , Y + 4 + 1
0002e9 818e     +LDD R24 , Y + 4 + 2
0002ea 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002eb 940e 08cf 	CALL __MULF12
0002ed 940e 0702 	CALL SUBOPT_0xE
0002ef 940e 0739 	CALL SUBOPT_0x16
0002f1 940e 071a 	CALL SUBOPT_0x11
0002f3 2fe1      	MOV  R30,R17
0002f4 5f1f      	SUBI R17,-1
0002f5 30e0      	CPI  R30,0
0002f6 f669      	BRNE _0x202002A
0002f7 940e 072d 	CALL SUBOPT_0x14
0002f9 e2ee      	LDI  R30,LOW(46)
0002fa 93ec      	ST   X,R30
0002fb cfc8      	RJMP _0x202002A
                 _0x202002C:
0002fc 940e 073e 	CALL SUBOPT_0x17
0002fe 9731      	SBIW R30,1
0002ff 85aa      	LDD  R26,Y+10
000300 83a0      	STD  Z+0,R26
000301 3030      	CPI  R19,0
000302 f42c      	BRGE _0x202002E
000303 9531      	NEG  R19
000304 85a8      	LDD  R26,Y+8
000305 85b9      	LDD  R27,Y+8+1
000306 e2ed      	LDI  R30,LOW(45)
000307 c003      	RJMP _0x2020113
                 _0x202002E:
000308 85a8      	LDD  R26,Y+8
000309 85b9      	LDD  R27,Y+8+1
00030a e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
00030b 93ec      	ST   X,R30
00030c 940e 073e 	CALL SUBOPT_0x17
00030e 940e 073e 	CALL SUBOPT_0x17
000310 9731      	SBIW R30,1
000311 01bf      	MOVW R22,R30
000312 2fa3      	MOV  R26,R19
000313 e0ea      	LDI  R30,LOW(10)
000314 940e 09a7 	CALL __DIVB21
000316 5de0      	SUBI R30,-LOW(48)
000317 01db      	MOVW R26,R22
000318 93ec      	ST   X,R30
000319 940e 073e 	CALL SUBOPT_0x17
00031b 9731      	SBIW R30,1
00031c 01bf      	MOVW R22,R30
00031d 2fa3      	MOV  R26,R19
00031e e0ea      	LDI  R30,LOW(10)
00031f 940e 09d1 	CALL __MODB21
000321 5de0      	SUBI R30,-LOW(48)
000322 01db      	MOVW R26,R22
000323 93ec      	ST   X,R30
000324 85a8      	LDD  R26,Y+8
000325 85b9      	LDD  R27,Y+8+1
000326 e0e0      	LDI  R30,LOW(0)
000327 93ec      	ST   X,R30
                 _0x20C0005:
000328 940e 0a2f 	CALL __LOADLOCR4
00032a 9660      	ADIW R28,16
00032b 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00032c 93ba      	ST   -Y,R27
00032d 93aa      	ST   -Y,R26
00032e 97ef      	SBIW R28,63
00032f 9761      	SBIW R28,17
000330 940e 0a26 	CALL __SAVELOCR6
000332 e010      	LDI  R17,0
                +
000333 01fe     +MOVW R30 , R28
000334 5ae8     +SUBI R30 , LOW ( - 88 )
000335 4fff     +SBCI R31 , HIGH ( - 88 )
000336 9001     +LD R0 , Z +
000337 81f0     +LD R31 , Z
000338 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000339 87e8      	STD  Y+8,R30
00033a 87f9      	STD  Y+8+1,R31
                +
00033b 01fe     +MOVW R30 , R28
00033c 5aea     +SUBI R30 , LOW ( - 86 )
00033d 4fff     +SBCI R31 , HIGH ( - 86 )
00033e 9001     +LD R0 , Z +
00033f 81f0     +LD R31 , Z
000340 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000341 83ee      	STD  Y+6,R30
000342 83ff      	STD  Y+6+1,R31
000343 81ae      	LDD  R26,Y+6
000344 81bf      	LDD  R27,Y+6+1
000345 e0e0      	LDI  R30,LOW(0)
000346 e0f0      	LDI  R31,HIGH(0)
000347 93ed      	ST   X+,R30
000348 93fc      	ST   X,R31
                 _0x2020030:
000349 01de      	MOVW R26,R28
00034a 5aa4      	SUBI R26,LOW(-(92))
00034b 4fbf      	SBCI R27,HIGH(-(92))
00034c 940e 06db 	CALL SUBOPT_0xA
00034e 9731      	SBIW R30,1
00034f 91e4      	LPM  R30,Z
000350 2f2e      	MOV  R18,R30
000351 30e0      	CPI  R30,0
000352 f409      	BRNE PC+2
000353 c1e9      	RJMP _0x2020032
000354 2fe1      	MOV  R30,R17
000355 30e0      	CPI  R30,0
000356 f439      	BRNE _0x2020036
000357 3225      	CPI  R18,37
000358 f411      	BRNE _0x2020037
000359 e011      	LDI  R17,LOW(1)
00035a c002      	RJMP _0x2020038
                 _0x2020037:
00035b 940e 0744 	CALL SUBOPT_0x18
                 _0x2020038:
00035d c1de      	RJMP _0x2020035
                 _0x2020036:
00035e 30e1      	CPI  R30,LOW(0x1)
00035f f4c1      	BRNE _0x2020039
000360 3225      	CPI  R18,37
000361 f419      	BRNE _0x202003A
000362 940e 0744 	CALL SUBOPT_0x18
000364 c1d6      	RJMP _0x2020114
                 _0x202003A:
000365 e012      	LDI  R17,LOW(2)
000366 e0e0      	LDI  R30,LOW(0)
000367 8bed      	STD  Y+21,R30
000368 e000      	LDI  R16,LOW(0)
000369 322d      	CPI  R18,45
00036a f411      	BRNE _0x202003B
00036b e001      	LDI  R16,LOW(1)
00036c c1cf      	RJMP _0x2020035
                 _0x202003B:
00036d 322b      	CPI  R18,43
00036e f419      	BRNE _0x202003C
00036f e2eb      	LDI  R30,LOW(43)
000370 8bed      	STD  Y+21,R30
000371 c1ca      	RJMP _0x2020035
                 _0x202003C:
000372 3220      	CPI  R18,32
000373 f419      	BRNE _0x202003D
000374 e2e0      	LDI  R30,LOW(32)
000375 8bed      	STD  Y+21,R30
000376 c1c5      	RJMP _0x2020035
                 _0x202003D:
000377 c002      	RJMP _0x202003E
                 _0x2020039:
000378 30e2      	CPI  R30,LOW(0x2)
000379 f439      	BRNE _0x202003F
                 _0x202003E:
00037a e050      	LDI  R21,LOW(0)
00037b e013      	LDI  R17,LOW(3)
00037c 3320      	CPI  R18,48
00037d f411      	BRNE _0x2020040
00037e 6800      	ORI  R16,LOW(128)
00037f c1bc      	RJMP _0x2020035
                 _0x2020040:
000380 c002      	RJMP _0x2020041
                 _0x202003F:
000381 30e3      	CPI  R30,LOW(0x3)
000382 f491      	BRNE _0x2020042
                 _0x2020041:
000383 3320      	CPI  R18,48
000384 f010      	BRLO _0x2020044
000385 332a      	CPI  R18,58
000386 f008      	BRLO _0x2020045
                 _0x2020044:
000387 c007      	RJMP _0x2020043
                 _0x2020045:
000388 e0aa      	LDI  R26,LOW(10)
000389 9f5a      	MUL  R21,R26
00038a 2d50      	MOV  R21,R0
00038b 2fe2      	MOV  R30,R18
00038c 53e0      	SUBI R30,LOW(48)
00038d 0f5e      	ADD  R21,R30
00038e c1ad      	RJMP _0x2020035
                 _0x2020043:
00038f e040      	LDI  R20,LOW(0)
000390 322e      	CPI  R18,46
000391 f411      	BRNE _0x2020046
000392 e014      	LDI  R17,LOW(4)
000393 c1a8      	RJMP _0x2020035
                 _0x2020046:
000394 c00f      	RJMP _0x2020047
                 _0x2020042:
000395 30e4      	CPI  R30,LOW(0x4)
000396 f499      	BRNE _0x2020049
000397 3320      	CPI  R18,48
000398 f010      	BRLO _0x202004B
000399 332a      	CPI  R18,58
00039a f008      	BRLO _0x202004C
                 _0x202004B:
00039b c008      	RJMP _0x202004A
                 _0x202004C:
00039c 6200      	ORI  R16,LOW(32)
00039d e0aa      	LDI  R26,LOW(10)
00039e 9f4a      	MUL  R20,R26
00039f 2d40      	MOV  R20,R0
0003a0 2fe2      	MOV  R30,R18
0003a1 53e0      	SUBI R30,LOW(48)
0003a2 0f4e      	ADD  R20,R30
0003a3 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
0003a4 362c      	CPI  R18,108
0003a5 f419      	BRNE _0x202004D
0003a6 6002      	ORI  R16,LOW(2)
0003a7 e015      	LDI  R17,LOW(5)
0003a8 c193      	RJMP _0x2020035
                 _0x202004D:
0003a9 c003      	RJMP _0x202004E
                 _0x2020049:
0003aa 30e5      	CPI  R30,LOW(0x5)
0003ab f009      	BREQ PC+2
0003ac c18f      	RJMP _0x2020035
                 _0x202004E:
0003ad 2fe2      	MOV  R30,R18
0003ae 36e3      	CPI  R30,LOW(0x63)
0003af f459      	BRNE _0x2020053
0003b0 940e 074b 	CALL SUBOPT_0x19
0003b2 940e 0752 	CALL SUBOPT_0x1A
0003b4 940e 074b 	CALL SUBOPT_0x19
0003b6 81a4      	LDD  R26,Z+4
0003b7 93aa      	ST   -Y,R26
0003b8 940e 0759 	CALL SUBOPT_0x1B
0003ba c180      	RJMP _0x2020054
                 _0x2020053:
0003bb 34e5      	CPI  R30,LOW(0x45)
0003bc f011      	BREQ _0x2020057
0003bd 36e5      	CPI  R30,LOW(0x65)
0003be f409      	BRNE _0x2020058
                 _0x2020057:
0003bf c003      	RJMP _0x2020059
                 _0x2020058:
0003c0 36e6      	CPI  R30,LOW(0x66)
0003c1 f009      	BREQ PC+2
0003c2 c048      	RJMP _0x202005A
                 _0x2020059:
0003c3 01fe      	MOVW R30,R28
0003c4 9676      	ADIW R30,22
0003c5 87ee      	STD  Y+14,R30
0003c6 87ff      	STD  Y+14+1,R31
0003c7 940e 075f 	CALL SUBOPT_0x1C
0003c9 940e 09f1 	CALL __GETD1P
0003cb 940e 0766 	CALL SUBOPT_0x1D
0003cd 940e 076b 	CALL SUBOPT_0x1E
0003cf 85ad      	LDD  R26,Y+13
0003d0 23aa      	TST  R26
0003d1 f032      	BRMI _0x202005B
0003d2 89ad      	LDD  R26,Y+21
0003d3 32ab      	CPI  R26,LOW(0x2B)
0003d4 f059      	BREQ _0x202005D
0003d5 32a0      	CPI  R26,LOW(0x20)
0003d6 f081      	BREQ _0x202005F
0003d7 c017      	RJMP _0x2020060
                 _0x202005B:
0003d8 940e 076d 	CALL SUBOPT_0x1F
0003da 940e 07d9 	CALL __ANEGF1
0003dc 940e 0766 	CALL SUBOPT_0x1D
0003de e2ed      	LDI  R30,LOW(45)
0003df 8bed      	STD  Y+21,R30
                 _0x202005D:
0003e0 ff07      	SBRS R16,7
0003e1 c005      	RJMP _0x2020061
0003e2 89ed      	LDD  R30,Y+21
0003e3 93ea      	ST   -Y,R30
0003e4 940e 0759 	CALL SUBOPT_0x1B
0003e6 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
0003e7 85ee      	LDD  R30,Y+14
0003e8 85ff      	LDD  R31,Y+14+1
0003e9 9631      	ADIW R30,1
0003ea 87ee      	STD  Y+14,R30
0003eb 87ff      	STD  Y+14+1,R31
0003ec 9731      	SBIW R30,1
0003ed 89ad      	LDD  R26,Y+21
0003ee 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
0003ef ff05      	SBRS R16,5
0003f0 e046      	LDI  R20,LOW(6)
0003f1 3626      	CPI  R18,102
0003f2 f451      	BRNE _0x2020064
0003f3 940e 076d 	CALL SUBOPT_0x1F
0003f5 940e 0a0b 	CALL __PUTPARD1
0003f7 934a      	ST   -Y,R20
0003f8 89ab      	LDD  R26,Y+19
0003f9 89bc      	LDD  R27,Y+19+1
0003fa 940e 05e8 	CALL _ftoa
0003fc c009      	RJMP _0x2020065
                 _0x2020064:
0003fd 940e 076d 	CALL SUBOPT_0x1F
0003ff 940e 0a0b 	CALL __PUTPARD1
000401 934a      	ST   -Y,R20
000402 932a      	ST   -Y,R18
000403 89ac      	LDD  R26,Y+20
000404 89bd      	LDD  R27,Y+20+1
000405 de54      	RCALL __ftoe_G101
                 _0x2020065:
000406 01fe      	MOVW R30,R28
000407 9676      	ADIW R30,22
000408 940e 0772 	CALL SUBOPT_0x20
00040a c01e      	RJMP _0x2020066
                 _0x202005A:
00040b 37e3      	CPI  R30,LOW(0x73)
00040c f439      	BRNE _0x2020068
00040d 940e 076b 	CALL SUBOPT_0x1E
00040f 940e 077a 	CALL SUBOPT_0x21
000411 940e 0772 	CALL SUBOPT_0x20
000413 c00e      	RJMP _0x2020069
                 _0x2020068:
000414 37e0      	CPI  R30,LOW(0x70)
000415 f4c1      	BRNE _0x202006B
000416 940e 076b 	CALL SUBOPT_0x1E
000418 940e 077a 	CALL SUBOPT_0x21
00041a 87ee      	STD  Y+14,R30
00041b 87ff      	STD  Y+14+1,R31
00041c 85ae      	LDD  R26,Y+14
00041d 85bf      	LDD  R27,Y+14+1
00041e 940e 0593 	CALL _strlenf
000420 2f1e      	MOV  R17,R30
000421 6008      	ORI  R16,LOW(8)
                 _0x2020069:
000422 770f      	ANDI R16,LOW(127)
000423 3040      	CPI  R20,0
000424 f011      	BREQ _0x202006D
000425 1741      	CP   R20,R17
000426 f008      	BRLO _0x202006E
                 _0x202006D:
000427 c001      	RJMP _0x202006C
                 _0x202006E:
000428 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
000429 e040      	LDI  R20,LOW(0)
00042a e0e0      	LDI  R30,LOW(0)
00042b 8bec      	STD  Y+20,R30
00042c e030      	LDI  R19,LOW(0)
00042d c06d      	RJMP _0x202006F
                 _0x202006B:
00042e 36e4      	CPI  R30,LOW(0x64)
00042f f011      	BREQ _0x2020072
000430 36e9      	CPI  R30,LOW(0x69)
000431 f411      	BRNE _0x2020073
                 _0x2020072:
000432 6004      	ORI  R16,LOW(4)
000433 c002      	RJMP _0x2020074
                 _0x2020073:
000434 37e5      	CPI  R30,LOW(0x75)
000435 f4a1      	BRNE _0x2020075
                 _0x2020074:
000436 e0ea      	LDI  R30,LOW(10)
000437 8bec      	STD  Y+20,R30
000438 ff01      	SBRS R16,1
000439 c008      	RJMP _0x2020076
                +
00043a e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00043b ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00043c e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00043d e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00043e 940e 077f 	CALL SUBOPT_0x22
000440 e01a      	LDI  R17,LOW(10)
000441 c022      	RJMP _0x2020077
                 _0x2020076:
                +
000442 e1e0     +LDI R30 , LOW ( 0x2710 )
000443 e2f7     +LDI R31 , HIGH ( 0x2710 )
000444 e060     +LDI R22 , BYTE3 ( 0x2710 )
000445 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000446 940e 077f 	CALL SUBOPT_0x22
000448 e015      	LDI  R17,LOW(5)
000449 c01a      	RJMP _0x2020077
                 _0x2020075:
00044a 35e8      	CPI  R30,LOW(0x58)
00044b f411      	BRNE _0x2020079
00044c 6008      	ORI  R16,LOW(8)
00044d c003      	RJMP _0x202007A
                 _0x2020079:
00044e 37e8      	CPI  R30,LOW(0x78)
00044f f009      	BREQ PC+2
000450 c0ea      	RJMP _0x20200B8
                 _0x202007A:
000451 e1e0      	LDI  R30,LOW(16)
000452 8bec      	STD  Y+20,R30
000453 ff01      	SBRS R16,1
000454 c008      	RJMP _0x202007C
                +
000455 e0e0     +LDI R30 , LOW ( 0x10000000 )
000456 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000457 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000458 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000459 940e 077f 	CALL SUBOPT_0x22
00045b e018      	LDI  R17,LOW(8)
00045c c007      	RJMP _0x2020077
                 _0x202007C:
                +
00045d e0e0     +LDI R30 , LOW ( 0x1000 )
00045e e1f0     +LDI R31 , HIGH ( 0x1000 )
00045f e060     +LDI R22 , BYTE3 ( 0x1000 )
000460 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000461 940e 077f 	CALL SUBOPT_0x22
000463 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000464 3040      	CPI  R20,0
000465 f011      	BREQ _0x202007D
000466 770f      	ANDI R16,LOW(127)
000467 c001      	RJMP _0x202007E
                 _0x202007D:
000468 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000469 ff01      	SBRS R16,1
00046a c008      	RJMP _0x202007F
00046b 940e 076b 	CALL SUBOPT_0x1E
00046d 940e 075f 	CALL SUBOPT_0x1C
00046f 9614      	ADIW R26,4
000470 940e 09f1 	CALL __GETD1P
000472 c00f      	RJMP _0x2020115
                 _0x202007F:
000473 ff02      	SBRS R16,2
000474 c007      	RJMP _0x2020081
000475 940e 076b 	CALL SUBOPT_0x1E
000477 940e 077a 	CALL SUBOPT_0x21
000479 940e 0994 	CALL __CWD1
00047b c006      	RJMP _0x2020115
                 _0x2020081:
00047c 940e 076b 	CALL SUBOPT_0x1E
00047e 940e 077a 	CALL SUBOPT_0x21
000480 2766      	CLR  R22
000481 2777      	CLR  R23
                 _0x2020115:
                +
000482 87ea     +STD Y + 10 , R30
000483 87fb     +STD Y + 10 + 1 , R31
000484 876c     +STD Y + 10 + 2 , R22
000485 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000486 ff02      	SBRS R16,2
000487 c012      	RJMP _0x2020083
000488 85ad      	LDD  R26,Y+13
000489 23aa      	TST  R26
00048a f442      	BRPL _0x2020084
00048b 940e 076d 	CALL SUBOPT_0x1F
00048d 940e 0986 	CALL __ANEGD1
00048f 940e 0766 	CALL SUBOPT_0x1D
000491 e2ed      	LDI  R30,LOW(45)
000492 8bed      	STD  Y+21,R30
                 _0x2020084:
000493 89ed      	LDD  R30,Y+21
000494 30e0      	CPI  R30,0
000495 f019      	BREQ _0x2020085
000496 5f1f      	SUBI R17,-LOW(1)
000497 5f4f      	SUBI R20,-LOW(1)
000498 c001      	RJMP _0x2020086
                 _0x2020085:
000499 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
00049a 2f34      	MOV  R19,R20
                 _0x202006F:
00049b fd00      	SBRC R16,0
00049c c014      	RJMP _0x2020087
                 _0x2020088:
00049d 1715      	CP   R17,R21
00049e f410      	BRSH _0x202008B
00049f 1735      	CP   R19,R21
0004a0 f008      	BRLO _0x202008C
                 _0x202008B:
0004a1 c00f      	RJMP _0x202008A
                 _0x202008C:
0004a2 ff07      	SBRS R16,7
0004a3 c008      	RJMP _0x202008D
0004a4 ff02      	SBRS R16,2
0004a5 c004      	RJMP _0x202008E
0004a6 7f0b      	ANDI R16,LOW(251)
0004a7 892d      	LDD  R18,Y+21
0004a8 5011      	SUBI R17,LOW(1)
0004a9 c001      	RJMP _0x202008F
                 _0x202008E:
0004aa e320      	LDI  R18,LOW(48)
                 _0x202008F:
0004ab c001      	RJMP _0x2020090
                 _0x202008D:
0004ac e220      	LDI  R18,LOW(32)
                 _0x2020090:
0004ad 940e 0744 	CALL SUBOPT_0x18
0004af 5051      	SUBI R21,LOW(1)
0004b0 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
0004b1 1714      	CP   R17,R20
0004b2 f490      	BRSH _0x2020093
0004b3 6100      	ORI  R16,LOW(16)
0004b4 ff02      	SBRS R16,2
0004b5 c006      	RJMP _0x2020094
0004b6 940e 0784 	CALL SUBOPT_0x23
0004b8 f009      	BREQ _0x2020095
0004b9 5051      	SUBI R21,LOW(1)
                 _0x2020095:
0004ba 5011      	SUBI R17,LOW(1)
0004bb 5041      	SUBI R20,LOW(1)
                 _0x2020094:
0004bc e3e0      	LDI  R30,LOW(48)
0004bd 93ea      	ST   -Y,R30
0004be 940e 0759 	CALL SUBOPT_0x1B
0004c0 3050      	CPI  R21,0
0004c1 f009      	BREQ _0x2020096
0004c2 5051      	SUBI R21,LOW(1)
                 _0x2020096:
0004c3 5041      	SUBI R20,LOW(1)
0004c4 cfec      	RJMP _0x2020091
                 _0x2020093:
0004c5 2f31      	MOV  R19,R17
0004c6 89ec      	LDD  R30,Y+20
0004c7 30e0      	CPI  R30,0
0004c8 f4b9      	BRNE _0x2020097
                 _0x2020098:
0004c9 3030      	CPI  R19,0
0004ca f0a1      	BREQ _0x202009A
0004cb ff03      	SBRS R16,3
0004cc c006      	RJMP _0x202009B
0004cd 85ee      	LDD  R30,Y+14
0004ce 85ff      	LDD  R31,Y+14+1
0004cf 9125      	LPM  R18,Z+
0004d0 87ee      	STD  Y+14,R30
0004d1 87ff      	STD  Y+14+1,R31
0004d2 c005      	RJMP _0x202009C
                 _0x202009B:
0004d3 85ae      	LDD  R26,Y+14
0004d4 85bf      	LDD  R27,Y+14+1
0004d5 912d      	LD   R18,X+
0004d6 87ae      	STD  Y+14,R26
0004d7 87bf      	STD  Y+14+1,R27
                 _0x202009C:
0004d8 940e 0744 	CALL SUBOPT_0x18
0004da 3050      	CPI  R21,0
0004db f009      	BREQ _0x202009D
0004dc 5051      	SUBI R21,LOW(1)
                 _0x202009D:
0004dd 5031      	SUBI R19,LOW(1)
0004de cfea      	RJMP _0x2020098
                 _0x202009A:
0004df c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
0004e0 940e 0796 	CALL SUBOPT_0x24
0004e2 940e 09ac 	CALL __DIVD21U
0004e4 2f2e      	MOV  R18,R30
0004e5 302a      	CPI  R18,10
0004e6 f030      	BRLO _0x20200A2
0004e7 ff03      	SBRS R16,3
0004e8 c002      	RJMP _0x20200A3
0004e9 5c29      	SUBI R18,-LOW(55)
0004ea c001      	RJMP _0x20200A4
                 _0x20200A3:
0004eb 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
0004ec c001      	RJMP _0x20200A5
                 _0x20200A2:
0004ed 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
0004ee fd04      	SBRC R16,4
0004ef c021      	RJMP _0x20200A7
0004f0 3321      	CPI  R18,49
0004f1 f460      	BRSH _0x20200A9
                +
0004f2 89a8     +LDD R26 , Y + 16
0004f3 89b9     +LDD R27 , Y + 16 + 1
0004f4 898a     +LDD R24 , Y + 16 + 2
0004f5 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0004f6 30a1     +CPI R26 , LOW ( 0x1 )
0004f7 e0e0     +LDI R30 , HIGH ( 0x1 )
0004f8 07be     +CPC R27 , R30
0004f9 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0004fa 078e     +CPC R24 , R30
0004fb e0e0     +LDI R30 , BYTE4 ( 0x1 )
0004fc 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0004fd f409      	BRNE _0x20200A8
                 _0x20200A9:
0004fe c00b      	RJMP _0x20200AB
                 _0x20200A8:
0004ff 1743      	CP   R20,R19
000500 f440      	BRSH _0x2020116
000501 1753      	CP   R21,R19
000502 f010      	BRLO _0x20200AE
000503 ff00      	SBRS R16,0
000504 c001      	RJMP _0x20200AF
                 _0x20200AE:
000505 c010      	RJMP _0x20200AD
                 _0x20200AF:
000506 e220      	LDI  R18,LOW(32)
000507 ff07      	SBRS R16,7
000508 c008      	RJMP _0x20200B0
                 _0x2020116:
000509 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
00050a 6100      	ORI  R16,LOW(16)
00050b ff02      	SBRS R16,2
00050c c004      	RJMP _0x20200B1
00050d 940e 0784 	CALL SUBOPT_0x23
00050f f009      	BREQ _0x20200B2
000510 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
000511 940e 0744 	CALL SUBOPT_0x18
000513 3050      	CPI  R21,0
000514 f009      	BREQ _0x20200B3
000515 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
000516 5031      	SUBI R19,LOW(1)
000517 940e 0796 	CALL SUBOPT_0x24
000519 940e 09dd 	CALL __MODD21U
00051b 940e 0766 	CALL SUBOPT_0x1D
00051d 89ec      	LDD  R30,Y+20
                +
00051e 89a8     +LDD R26 , Y + 16
00051f 89b9     +LDD R27 , Y + 16 + 1
000520 898a     +LDD R24 , Y + 16 + 2
000521 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000522 27ff      	CLR  R31
000523 2766      	CLR  R22
000524 2777      	CLR  R23
000525 940e 09ac 	CALL __DIVD21U
000527 940e 077f 	CALL SUBOPT_0x22
                +
000529 89e8     +LDD R30 , Y + 16
00052a 89f9     +LDD R31 , Y + 16 + 1
00052b 896a     +LDD R22 , Y + 16 + 2
00052c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00052d 940e 0a22 	CALL __CPD10
00052f f009      	BREQ _0x20200A1
000530 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
000531 ff00      	SBRS R16,0
000532 c008      	RJMP _0x20200B4
                 _0x20200B5:
000533 3050      	CPI  R21,0
000534 f031      	BREQ _0x20200B7
000535 5051      	SUBI R21,LOW(1)
000536 e2e0      	LDI  R30,LOW(32)
000537 93ea      	ST   -Y,R30
000538 940e 0759 	CALL SUBOPT_0x1B
00053a cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
00053b e010      	LDI  R17,LOW(0)
                 _0x2020035:
00053c ce0c      	RJMP _0x2020030
                 _0x2020032:
00053d 81ae      	LDD  R26,Y+6
00053e 81bf      	LDD  R27,Y+6+1
00053f 940e 09ed 	CALL __GETW1P
000541 940e 0a2d 	CALL __LOADLOCR6
000543 96ef      	ADIW R28,63
000544 966f      	ADIW R28,31
000545 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000546 92ff      	PUSH R15
000547 2ef8      	MOV  R15,R24
000548 9726      	SBIW R28,6
000549 940e 0a28 	CALL __SAVELOCR4
00054b 940e 079f 	CALL SUBOPT_0x25
00054d 9730      	SBIW R30,0
00054e f419      	BRNE _0x20200B9
00054f efef      	LDI  R30,LOW(65535)
000550 efff      	LDI  R31,HIGH(65535)
000551 c023      	RJMP _0x20C0004
                 _0x20200B9:
000552 01de      	MOVW R26,R28
000553 9616      	ADIW R26,6
000554 940e 0982 	CALL __ADDW2R15
000556 018d      	MOVW R16,R26
000557 940e 079f 	CALL SUBOPT_0x25
000559 83ee      	STD  Y+6,R30
00055a 83ff      	STD  Y+6+1,R31
00055b e0e0      	LDI  R30,LOW(0)
00055c 87e8      	STD  Y+8,R30
00055d 87e9      	STD  Y+8+1,R30
00055e 01de      	MOVW R26,R28
00055f 961a      	ADIW R26,10
000560 940e 0982 	CALL __ADDW2R15
000562 940e 09ed 	CALL __GETW1P
000564 93fa      	ST   -Y,R31
000565 93ea      	ST   -Y,R30
000566 931a      	ST   -Y,R17
000567 930a      	ST   -Y,R16
000568 e2e0      	LDI  R30,LOW(_put_buff_G101)
000569 e0f2      	LDI  R31,HIGH(_put_buff_G101)
00056a 93fa      	ST   -Y,R31
00056b 93ea      	ST   -Y,R30
00056c 01de      	MOVW R26,R28
00056d 961a      	ADIW R26,10
00056e ddbd      	RCALL __print_G101
00056f 019f      	MOVW R18,R30
000570 81ae      	LDD  R26,Y+6
000571 81bf      	LDD  R27,Y+6+1
000572 e0e0      	LDI  R30,LOW(0)
000573 93ec      	ST   X,R30
000574 01f9      	MOVW R30,R18
                 _0x20C0004:
000575 940e 0a2f 	CALL __LOADLOCR4
000577 962a      	ADIW R28,10
000578 90ff      	POP  R15
000579 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00057a 93ba      	ST   -Y,R27
00057b 93aa      	ST   -Y,R26
00057c 91e9          ld   r30,y+
00057d 91f9          ld   r31,y+
00057e 91a9          ld   r26,y+
00057f 91b9          ld   r27,y+
000580 01cd          movw r24,r26
                 strcpyf0:
000581 9005      	lpm  r0,z+
000582 920d          st   x+,r0
000583 2000          tst  r0
000584 f7e1          brne strcpyf0
000585 01fc          movw r30,r24
000586 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000587 93ba      	ST   -Y,R27
000588 93aa      	ST   -Y,R26
000589 91a9          ld   r26,y+
00058a 91b9          ld   r27,y+
00058b 27ee          clr  r30
00058c 27ff          clr  r31
                 strlen0:
00058d 916d          ld   r22,x+
00058e 2366          tst  r22
00058f f011          breq strlen1
000590 9631          adiw r30,1
000591 cffb          rjmp strlen0
                 strlen1:
000592 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000593 93ba      	ST   -Y,R27
000594 93aa      	ST   -Y,R26
000595 27aa          clr  r26
000596 27bb          clr  r27
000597 91e9          ld   r30,y+
000598 91f9          ld   r31,y+
                 strlenf0:
000599 9005      	lpm  r0,z+
00059a 2000          tst  r0
00059b f011          breq strlenf1
00059c 9611          adiw r26,1
00059d cffb          rjmp strlenf0
                 strlenf1:
00059e 01fd          movw r30,r26
00059f 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0005a0 940e 0a10 	CALL __PUTPARD2
0005a2 817b         ldd  r23,y+3
0005a3 816a         ldd  r22,y+2
0005a4 81f9         ldd  r31,y+1
0005a5 81e8         ld   r30,y
0005a6 fb77         bst  r23,7
0005a7 0f77         lsl  r23
0005a8 fd67         sbrc r22,7
0005a9 6071         sbr  r23,1
0005aa 2f97         mov  r25,r23
0005ab 579e         subi r25,0x7e
0005ac f081         breq __ftrunc0
0005ad f078         brcs __ftrunc0
0005ae 3198         cpi  r25,24
0005af f490         brsh __ftrunc1
0005b0 27aa         clr  r26
0005b1 27bb         clr  r27
0005b2 2788         clr  r24
                 __ftrunc2:
0005b3 9408         sec
0005b4 9587         ror  r24
0005b5 95b7         ror  r27
0005b6 95a7         ror  r26
0005b7 959a         dec  r25
0005b8 f7d1         brne __ftrunc2
0005b9 23ea         and  r30,r26
0005ba 23fb         and  r31,r27
0005bb 2368         and  r22,r24
0005bc c005         rjmp __ftrunc1
                 __ftrunc0:
0005bd 94e8         clt
0005be 2777         clr  r23
0005bf 27ee         clr  r30
0005c0 27ff         clr  r31
0005c1 2766         clr  r22
                 __ftrunc1:
0005c2 776f         cbr  r22,0x80
0005c3 9576         lsr  r23
0005c4 f408         brcc __ftrunc3
0005c5 6860         sbr  r22,0x80
                 __ftrunc3:
0005c6 f977         bld  r23,7
0005c7 91a9         ld   r26,y+
0005c8 91b9         ld   r27,y+
0005c9 9189         ld   r24,y+
0005ca 9199         ld   r25,y+
0005cb 17ea         cp   r30,r26
0005cc 07fb         cpc  r31,r27
0005cd 0768         cpc  r22,r24
0005ce 0779         cpc  r23,r25
0005cf fb97         bst  r25,7
0005d0 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0005d1 940e 0a10 	CALL __PUTPARD2
0005d3 940e 0a01 	CALL __GETD2S0
0005d5 940e 05a0 	CALL _ftrunc
0005d7 940e 0a06 	CALL __PUTD1S0
0005d9 f419          brne __floor1
                 __floor0:
0005da 940e 09fc 	CALL __GETD1S0
0005dc c009      	RJMP _0x20C0003
                 __floor1:
0005dd f7e6          brtc __floor0
0005de 940e 09fc 	CALL __GETD1S0
                +
0005e0 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0005e1 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0005e2 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0005e3 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0005e4 940e 0878 	CALL __SUBF12
                 _0x20C0003:
0005e6 9624      	ADIW R28,4
0005e7 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0005e8 d0f8      	RCALL SUBOPT_0xB
0005e9 e0e0      	LDI  R30,LOW(0)
0005ea 83ea      	STD  Y+2,R30
0005eb e3ef      	LDI  R30,LOW(63)
0005ec 83eb      	STD  Y+3,R30
0005ed 931a      	ST   -Y,R17
0005ee 930a      	ST   -Y,R16
0005ef 85eb      	LDD  R30,Y+11
0005f0 85fc      	LDD  R31,Y+11+1
0005f1 3fef      	CPI  R30,LOW(0xFFFF)
0005f2 efaf      	LDI  R26,HIGH(0xFFFF)
0005f3 07fa      	CPC  R31,R26
0005f4 f431      	BRNE _0x20A000D
0005f5 d1b0      	RCALL SUBOPT_0x26
                +
0005f6 e8ac     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
0005f7 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
0005f8 940e 057a 	CALL _strcpyf
0005fa c08a      	RJMP _0x20C0002
                 _0x20A000D:
0005fb 3fef      	CPI  R30,LOW(0x7FFF)
0005fc e7af      	LDI  R26,HIGH(0x7FFF)
0005fd 07fa      	CPC  R31,R26
0005fe f431      	BRNE _0x20A000C
0005ff d1a6      	RCALL SUBOPT_0x26
                +
000600 e8ad     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
000601 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
000602 940e 057a 	CALL _strcpyf
000604 c080      	RJMP _0x20C0002
                 _0x20A000C:
000605 85ac      	LDD  R26,Y+12
000606 23aa      	TST  R26
000607 f452      	BRPL _0x20A000F
                +
000608 85e9     +LDD R30 , Y + 9
000609 85fa     +LDD R31 , Y + 9 + 1
00060a 856b     +LDD R22 , Y + 9 + 2
00060b 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00060c 940e 07d9 	CALL __ANEGF1
00060e d19c      	RCALL SUBOPT_0x27
00060f d1a0      	RCALL SUBOPT_0x28
000610 e2ed      	LDI  R30,LOW(45)
000611 93ec      	ST   X,R30
                 _0x20A000F:
000612 85a8      	LDD  R26,Y+8
000613 30a7      	CPI  R26,LOW(0x7)
000614 f010      	BRLO _0x20A0010
000615 e0e6      	LDI  R30,LOW(6)
000616 87e8      	STD  Y+8,R30
                 _0x20A0010:
000617 8518      	LDD  R17,Y+8
                 _0x20A0011:
000618 2fe1      	MOV  R30,R17
000619 5011      	SUBI R17,1
00061a 30e0      	CPI  R30,0
00061b f021      	BREQ _0x20A0013
00061c d19a      	RCALL SUBOPT_0x29
00061d d108      	RCALL SUBOPT_0x13
00061e d19d      	RCALL SUBOPT_0x2A
00061f cff8      	RJMP _0x20A0011
                 _0x20A0013:
000620 d1a0      	RCALL SUBOPT_0x2B
000621 940e 087f 	CALL __ADDF12
000623 d187      	RCALL SUBOPT_0x27
000624 e010      	LDI  R17,LOW(0)
                +
000625 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000626 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000627 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000628 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000629 d192      	RCALL SUBOPT_0x2A
                 _0x20A0014:
00062a d196      	RCALL SUBOPT_0x2B
00062b 940e 0962 	CALL __CMPF12
00062d f068      	BRLO _0x20A0016
00062e d188      	RCALL SUBOPT_0x29
00062f d0e3      	RCALL SUBOPT_0x10
000630 d18b      	RCALL SUBOPT_0x2A
000631 5f1f      	SUBI R17,-LOW(1)
000632 3217      	CPI  R17,39
000633 f030      	BRLO _0x20A0017
000634 d171      	RCALL SUBOPT_0x26
                +
000635 e9a1     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
000636 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
000637 940e 057a 	CALL _strcpyf
000639 c04b      	RJMP _0x20C0002
                 _0x20A0017:
00063a cfef      	RJMP _0x20A0014
                 _0x20A0016:
00063b 3010      	CPI  R17,0
00063c f421      	BRNE _0x20A0018
00063d d172      	RCALL SUBOPT_0x28
00063e e3e0      	LDI  R30,LOW(48)
00063f 93ec      	ST   X,R30
000640 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
000641 2fe1      	MOV  R30,R17
000642 5011      	SUBI R17,1
000643 30e0      	CPI  R30,0
000644 f0e1      	BREQ _0x20A001C
000645 d171      	RCALL SUBOPT_0x29
000646 d0df      	RCALL SUBOPT_0x13
000647 d0d7      	RCALL SUBOPT_0x12
000648 01df      	MOVW R26,R30
000649 01cb      	MOVW R24,R22
00064a 940e 05d1 	CALL _floor
00064c d16f      	RCALL SUBOPT_0x2A
00064d d173      	RCALL SUBOPT_0x2B
00064e 940e 091d 	CALL __DIVF21
000650 940e 080c 	CALL __CFD1U
000652 2f0e      	MOV  R16,R30
000653 d15c      	RCALL SUBOPT_0x28
000654 d0df      	RCALL SUBOPT_0x15
000655 e0f0      	LDI  R31,0
000656 d160      	RCALL SUBOPT_0x29
000657 940e 0994 	CALL __CWD1
000659 940e 0845 	CALL __CDF1
00065b 940e 08cf 	CALL __MULF12
00065d d16c      	RCALL SUBOPT_0x2C
00065e d0da      	RCALL SUBOPT_0x16
00065f d14b      	RCALL SUBOPT_0x27
000660 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
000661 85e8      	LDD  R30,Y+8
000662 30e0      	CPI  R30,0
000663 f0e9      	BREQ _0x20C0001
000664 d14b      	RCALL SUBOPT_0x28
000665 e2ee      	LDI  R30,LOW(46)
000666 93ec      	ST   X,R30
                 _0x20A001E:
000667 85e8      	LDD  R30,Y+8
000668 50e1      	SUBI R30,LOW(1)
000669 87e8      	STD  Y+8,R30
00066a 5fef      	SUBI R30,-LOW(1)
00066b f0a9      	BREQ _0x20A0020
00066c d15d      	RCALL SUBOPT_0x2C
00066d d0a5      	RCALL SUBOPT_0x10
00066e d13c      	RCALL SUBOPT_0x27
                +
00066f 85e9     +LDD R30 , Y + 9
000670 85fa     +LDD R31 , Y + 9 + 1
000671 856b     +LDD R22 , Y + 9 + 2
000672 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000673 940e 080c 	CALL __CFD1U
000675 2f0e      	MOV  R16,R30
000676 d139      	RCALL SUBOPT_0x28
000677 d0bc      	RCALL SUBOPT_0x15
000678 e0f0      	LDI  R31,0
000679 d150      	RCALL SUBOPT_0x2C
00067a 940e 0994 	CALL __CWD1
00067c 940e 0845 	CALL __CDF1
00067e d0ba      	RCALL SUBOPT_0x16
00067f d12b      	RCALL SUBOPT_0x27
000680 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000681 81ae      	LDD  R26,Y+6
000682 81bf      	LDD  R27,Y+6+1
000683 e0e0      	LDI  R30,LOW(0)
000684 93ec      	ST   X,R30
                 _0x20C0002:
000685 8119      	LDD  R17,Y+1
000686 8108      	LDD  R16,Y+0
000687 962d      	ADIW R28,13
000688 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _t:
000260           	.BYTE 0x4
                 _str:
000264           	.BYTE 0x11
                 __base_y_G100:
000275           	.BYTE 0x4
                 __seed_G105:
000279           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000689 e0e0      	LDI  R30,LOW(0)
00068a 93ea      	ST   -Y,R30
00068b e0a0      	LDI  R26,LOW(0)
00068c 940c 01a2 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
00068e e9a6      	LDI  R26,LOW(150)
00068f e0b0      	LDI  R27,0
000690 940c 07cf 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2:
000692 91a0 0260 	LDS  R26,_t
000694 91b0 0261 	LDS  R27,_t+1
000696 9180 0262 	LDS  R24,_t+2
000698 9190 0263 	LDS  R25,_t+3
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00069b e6e4      	LDI  R30,LOW(_str)
00069c e0f2      	LDI  R31,HIGH(_str)
00069d 93fa      	ST   -Y,R31
00069e 93ea      	ST   -Y,R30
00069f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0006a0 e6a4      	LDI  R26,LOW(_str)
0006a1 e0b2      	LDI  R27,HIGH(_str)
0006a2 940c 01d0 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
                +
0006a4 e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
0006a5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
0006a6 93fa      	ST   -Y,R31
0006a7 93ea      	ST   -Y,R30
0006a8 2de4      	MOV  R30,R4
0006a9 27ff      	CLR  R31
0006aa 2766      	CLR  R22
0006ab 2777      	CLR  R23
0006ac 940e 0a0b 	CALL __PUTPARD1
0006ae 2de5      	MOV  R30,R5
0006af 27ff      	CLR  R31
0006b0 2766      	CLR  R22
0006b1 2777      	CLR  R23
0006b2 940e 0a0b 	CALL __PUTPARD1
0006b4 e088      	LDI  R24,8
0006b5 940e 0546 	CALL _sprintf
0006b7 962c      	ADIW R28,12
0006b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0006b9 2de4      	MOV  R30,R4
0006ba dfd7      	RCALL SUBOPT_0x2
0006bb 27ff      	CLR  R31
0006bc 2766      	CLR  R22
0006bd 2777      	CLR  R23
0006be 940e 0845 	CALL __CDF1
0006c0 940e 0962 	CALL __CMPF12
0006c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
0006c3 2de5      	MOV  R30,R5
0006c4 dfcd      	RCALL SUBOPT_0x2
0006c5 27ff      	CLR  R31
0006c6 2766      	CLR  R22
0006c7 2777      	CLR  R23
0006c8 940e 0845 	CALL __CDF1
0006ca 940e 0962 	CALL __CMPF12
0006cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0006cd 940e 0196 	CALL __lcd_write_data
0006cf e0a3      	LDI  R26,LOW(3)
0006d0 e0b0      	LDI  R27,0
0006d1 940c 07cf 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
0006d3 e3a0      	LDI  R26,LOW(48)
0006d4 940e 0182 	CALL __lcd_write_nibble_G100
                +
0006d6 ec88     +LDI R24 , LOW ( 200 )
0006d7 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0006d8 9701     +SBIW R24 , 1
0006d9 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0006da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
0006db 91ed      	LD   R30,X+
0006dc 91fd      	LD   R31,X+
0006dd 9631      	ADIW R30,1
0006de 93fe      	ST   -X,R31
0006df 93ee      	ST   -X,R30
0006e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
0006e1 93ba      	ST   -Y,R27
0006e2 93aa      	ST   -Y,R26
0006e3 9724      	SBIW R28,4
0006e4 e0e0      	LDI  R30,LOW(0)
0006e5 83e8      	ST   Y,R30
0006e6 83e9      	STD  Y+1,R30
0006e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xC:
                +
0006e8 81ac     +LDD R26 , Y + 4
0006e9 81bd     +LDD R27 , Y + 4 + 1
0006ea 818e     +LDD R24 , Y + 4 + 2
0006eb 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0006ec e0e0     +LDI R30 , LOW ( 0x41200000 )
0006ed e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006ee e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006ef e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006f0 940e 08cf 	CALL __MULF12
                +
0006f2 83ec     +STD Y + 4 , R30
0006f3 83fd     +STD Y + 4 + 1 , R31
0006f4 836e     +STD Y + 4 + 2 , R22
0006f5 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0006f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xD:
                +
0006f7 81ec     +LDD R30 , Y + 4
0006f8 81fd     +LDD R31 , Y + 4 + 1
0006f9 816e     +LDD R22 , Y + 4 + 2
0006fa 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006fb 85ac     +LDD R26 , Y + 12
0006fc 85bd     +LDD R27 , Y + 12 + 1
0006fd 858e     +LDD R24 , Y + 12 + 2
0006fe 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006ff 940e 0962 	CALL __CMPF12
000701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
000702 85ac     +LDD R26 , Y + 12
000703 85bd     +LDD R27 , Y + 12 + 1
000704 858e     +LDD R24 , Y + 12 + 2
000705 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xF:
                +
000707 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000708 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000709 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00070a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00070b 940e 08cf 	CALL __MULF12
                +
00070d 87ec     +STD Y + 12 , R30
00070e 87fd     +STD Y + 12 + 1 , R31
00070f 876e     +STD Y + 12 + 2 , R22
000710 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000711 5f3f      	SUBI R19,-LOW(1)
000712 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
000713 e0e0     +LDI R30 , LOW ( 0x41200000 )
000714 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000715 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000716 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000717 940e 08cf 	CALL __MULF12
000719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
00071a 87ec     +STD Y + 12 , R30
00071b 87fd     +STD Y + 12 + 1 , R31
00071c 876e     +STD Y + 12 + 2 , R22
00071d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00071e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
00071f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000720 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000721 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000722 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000723 940e 087f 	CALL __ADDF12
000725 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
                +
000726 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000727 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000728 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000729 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00072a 940e 08cf 	CALL __MULF12
00072c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
00072d 85a8      	LDD  R26,Y+8
00072e 85b9      	LDD  R27,Y+8+1
00072f 9611      	ADIW R26,1
000730 87a8      	STD  Y+8,R26
000731 87b9      	STD  Y+8+1,R27
000732 9711      	SBIW R26,1
000733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000734 2fe0      	MOV  R30,R16
000735 5de0      	SUBI R30,-LOW(48)
000736 93ec      	ST   X,R30
000737 2fe0      	MOV  R30,R16
000738 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
000739 940e 0a15 	CALL __SWAPD12
00073b 940e 0878 	CALL __SUBF12
00073d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
00073e 85e8      	LDD  R30,Y+8
00073f 85f9      	LDD  R31,Y+8+1
000740 9631      	ADIW R30,1
000741 87e8      	STD  Y+8,R30
000742 87f9      	STD  Y+8+1,R31
000743 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
000744 932a      	ST   -Y,R18
000745 81af      	LDD  R26,Y+7
000746 85b8      	LDD  R27,Y+7+1
000747 85e9      	LDD  R30,Y+9
000748 85fa      	LDD  R31,Y+9+1
000749 9509      	ICALL
00074a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x19:
                +
00074b 01fe     +MOVW R30 , R28
00074c 5ae6     +SUBI R30 , LOW ( - 90 )
00074d 4fff     +SBCI R31 , HIGH ( - 90 )
00074e 9001     +LD R0 , Z +
00074f 81f0     +LD R31 , Z
000750 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000751 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1A:
000752 9734      	SBIW R30,4
                +
000753 01de     +MOVW R26 , R28
000754 5aa6     +SUBI R26 , LOW ( - 90 )
000755 4fbf     +SBCI R27 , HIGH ( - 90 )
000756 93ed     +ST X + , R30
000757 93fc     +ST X , R31
                 	__PUTW1SX 90
000758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000759 81af      	LDD  R26,Y+7
00075a 85b8      	LDD  R27,Y+7+1
00075b 85e9      	LDD  R30,Y+9
00075c 85fa      	LDD  R31,Y+9+1
00075d 9509      	ICALL
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1C:
                +
00075f 01de     +MOVW R26 , R28
000760 5aa6     +SUBI R26 , LOW ( - 90 )
000761 4fbf     +SBCI R27 , HIGH ( - 90 )
000762 900d     +LD R0 , X +
000763 91bc     +LD R27 , X
000764 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000765 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
000766 87ea     +STD Y + 10 , R30
000767 87fb     +STD Y + 10 + 1 , R31
000768 876c     +STD Y + 10 + 2 , R22
000769 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00076a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
00076b dfdf      	RCALL SUBOPT_0x19
00076c cfe5      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
00076d 85ea     +LDD R30 , Y + 10
00076e 85fb     +LDD R31 , Y + 10 + 1
00076f 856c     +LDD R22 , Y + 10 + 2
000770 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000771 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
000772 87ee      	STD  Y+14,R30
000773 87ff      	STD  Y+14+1,R31
000774 85ae      	LDD  R26,Y+14
000775 85bf      	LDD  R27,Y+14+1
000776 940e 0587 	CALL _strlen
000778 2f1e      	MOV  R17,R30
000779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x21:
00077a dfe4      	RCALL SUBOPT_0x1C
00077b 9614      	ADIW R26,4
00077c 940e 09ed 	CALL __GETW1P
00077e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
00077f 8be8     +STD Y + 16 , R30
000780 8bf9     +STD Y + 16 + 1 , R31
000781 8b6a     +STD Y + 16 + 2 , R22
000782 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000783 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x23:
000784 7f0b      	ANDI R16,LOW(251)
000785 89ed      	LDD  R30,Y+21
000786 93ea      	ST   -Y,R30
                +
000787 01de     +MOVW R26 , R28
000788 5aa9     +SUBI R26 , LOW ( - 87 )
000789 4fbf     +SBCI R27 , HIGH ( - 87 )
00078a 900d     +LD R0 , X +
00078b 91bc     +LD R27 , X
00078c 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00078d 01fe     +MOVW R30 , R28
00078e 5ae7     +SUBI R30 , LOW ( - 89 )
00078f 4fff     +SBCI R31 , HIGH ( - 89 )
000790 9001     +LD R0 , Z +
000791 81f0     +LD R31 , Z
000792 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000793 9509      	ICALL
000794 3050      	CPI  R21,0
000795 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000796 89e8     +LDD R30 , Y + 16
000797 89f9     +LDD R31 , Y + 16 + 1
000798 896a     +LDD R22 , Y + 16 + 2
000799 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00079a 85aa     +LDD R26 , Y + 10
00079b 85bb     +LDD R27 , Y + 10 + 1
00079c 858c     +LDD R24 , Y + 10 + 2
00079d 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00079e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
00079f 01de      	MOVW R26,R28
0007a0 961c      	ADIW R26,12
0007a1 940e 0982 	CALL __ADDW2R15
0007a3 940e 09ed 	CALL __GETW1P
0007a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
0007a6 81ee      	LDD  R30,Y+6
0007a7 81ff      	LDD  R31,Y+6+1
0007a8 93fa      	ST   -Y,R31
0007a9 93ea      	ST   -Y,R30
0007aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
0007ab 87e9     +STD Y + 9 , R30
0007ac 87fa     +STD Y + 9 + 1 , R31
0007ad 876b     +STD Y + 9 + 2 , R22
0007ae 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0007af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x28:
0007b0 81ae      	LDD  R26,Y+6
0007b1 81bf      	LDD  R27,Y+6+1
0007b2 9611      	ADIW R26,1
0007b3 83ae      	STD  Y+6,R26
0007b4 83bf      	STD  Y+6+1,R27
0007b5 9711      	SBIW R26,1
0007b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
                +
0007b7 81aa     +LDD R26 , Y + 2
0007b8 81bb     +LDD R27 , Y + 2 + 1
0007b9 818c     +LDD R24 , Y + 2 + 2
0007ba 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0007bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
0007bc 83ea     +STD Y + 2 , R30
0007bd 83fb     +STD Y + 2 + 1 , R31
0007be 836c     +STD Y + 2 + 2 , R22
0007bf 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
                +
0007c1 81ea     +LDD R30 , Y + 2
0007c2 81fb     +LDD R31 , Y + 2 + 1
0007c3 816c     +LDD R22 , Y + 2 + 2
0007c4 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0007c5 85a9     +LDD R26 , Y + 9
0007c6 85ba     +LDD R27 , Y + 9 + 1
0007c7 858b     +LDD R24 , Y + 9 + 2
0007c8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
0007ca 85a9     +LDD R26 , Y + 9
0007cb 85ba     +LDD R27 , Y + 9 + 1
0007cc 858b     +LDD R24 , Y + 9 + 2
0007cd 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007ce 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0007cf 9610      	adiw r26,0
0007d0 f039      	breq __delay_ms1
                 __delay_ms0:
0007d1 95a8      	wdr
                +
0007d2 ed80     +LDI R24 , LOW ( 0x7D0 )
0007d3 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0007d4 9701     +SBIW R24 , 1
0007d5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0007d6 9711      	sbiw r26,1
0007d7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0007d8 9508      	ret
                 
                 __ANEGF1:
0007d9 9730      	SBIW R30,0
0007da 4060      	SBCI R22,0
0007db 4070      	SBCI R23,0
0007dc f009      	BREQ __ANEGF10
0007dd 5870      	SUBI R23,0x80
                 __ANEGF10:
0007de 9508      	RET
                 
                 __ROUND_REPACK:
0007df 2355      	TST  R21
0007e0 f442      	BRPL __REPACK
0007e1 3850      	CPI  R21,0x80
0007e2 f411      	BRNE __ROUND_REPACK0
0007e3 ffe0      	SBRS R30,0
0007e4 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0007e5 9631      	ADIW R30,1
0007e6 1f69      	ADC  R22,R25
0007e7 1f79      	ADC  R23,R25
0007e8 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0007e9 e850      	LDI  R21,0x80
0007ea 2757      	EOR  R21,R23
0007eb f411      	BRNE __REPACK0
0007ec 935f      	PUSH R21
0007ed c0cf      	RJMP __ZERORES
                 __REPACK0:
0007ee 3f5f      	CPI  R21,0xFF
0007ef f031      	BREQ __REPACK1
0007f0 0f66      	LSL  R22
0007f1 0c00      	LSL  R0
0007f2 9557      	ROR  R21
0007f3 9567      	ROR  R22
0007f4 2f75      	MOV  R23,R21
0007f5 9508      	RET
                 __REPACK1:
0007f6 935f      	PUSH R21
0007f7 2000      	TST  R0
0007f8 f00a      	BRMI __REPACK2
0007f9 c0cf      	RJMP __MAXRES
                 __REPACK2:
0007fa c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0007fb e850      	LDI  R21,0x80
0007fc 2e19      	MOV  R1,R25
0007fd 2215      	AND  R1,R21
0007fe 0f88      	LSL  R24
0007ff 1f99      	ROL  R25
000800 2795      	EOR  R25,R21
000801 0f55      	LSL  R21
000802 9587      	ROR  R24
                 
                 __UNPACK1:
000803 e850      	LDI  R21,0x80
000804 2e07      	MOV  R0,R23
000805 2205      	AND  R0,R21
000806 0f66      	LSL  R22
000807 1f77      	ROL  R23
000808 2775      	EOR  R23,R21
000809 0f55      	LSL  R21
00080a 9567      	ROR  R22
00080b 9508      	RET
                 
                 __CFD1U:
00080c 9468      	SET
00080d c001      	RJMP __CFD1U0
                 __CFD1:
00080e 94e8      	CLT
                 __CFD1U0:
00080f 935f      	PUSH R21
000810 dff2      	RCALL __UNPACK1
000811 3870      	CPI  R23,0x80
000812 f018      	BRLO __CFD10
000813 3f7f      	CPI  R23,0xFF
000814 f408      	BRCC __CFD10
000815 c0a7      	RJMP __ZERORES
                 __CFD10:
000816 e156      	LDI  R21,22
000817 1b57      	SUB  R21,R23
000818 f4aa      	BRPL __CFD11
000819 9551      	NEG  R21
00081a 3058      	CPI  R21,8
00081b f40e      	BRTC __CFD19
00081c 3059      	CPI  R21,9
                 __CFD19:
00081d f030      	BRLO __CFD17
00081e efef      	SER  R30
00081f efff      	SER  R31
000820 ef6f      	SER  R22
000821 e77f      	LDI  R23,0x7F
000822 f977      	BLD  R23,7
000823 c01a      	RJMP __CFD15
                 __CFD17:
000824 2777      	CLR  R23
000825 2355      	TST  R21
000826 f0b9      	BREQ __CFD15
                 __CFD18:
000827 0fee      	LSL  R30
000828 1fff      	ROL  R31
000829 1f66      	ROL  R22
00082a 1f77      	ROL  R23
00082b 955a      	DEC  R21
00082c f7d1      	BRNE __CFD18
00082d c010      	RJMP __CFD15
                 __CFD11:
00082e 2777      	CLR  R23
                 __CFD12:
00082f 3058      	CPI  R21,8
000830 f028      	BRLO __CFD13
000831 2fef      	MOV  R30,R31
000832 2ff6      	MOV  R31,R22
000833 2f67      	MOV  R22,R23
000834 5058      	SUBI R21,8
000835 cff9      	RJMP __CFD12
                 __CFD13:
000836 2355      	TST  R21
000837 f031      	BREQ __CFD15
                 __CFD14:
000838 9576      	LSR  R23
000839 9567      	ROR  R22
00083a 95f7      	ROR  R31
00083b 95e7      	ROR  R30
00083c 955a      	DEC  R21
00083d f7d1      	BRNE __CFD14
                 __CFD15:
00083e 2000      	TST  R0
00083f f40a      	BRPL __CFD16
000840 d145      	RCALL __ANEGD1
                 __CFD16:
000841 915f      	POP  R21
000842 9508      	RET
                 
                 __CDF1U:
000843 9468      	SET
000844 c001      	RJMP __CDF1U0
                 __CDF1:
000845 94e8      	CLT
                 __CDF1U0:
000846 9730      	SBIW R30,0
000847 4060      	SBCI R22,0
000848 4070      	SBCI R23,0
000849 f0b1      	BREQ __CDF10
00084a 2400      	CLR  R0
00084b f026      	BRTS __CDF11
00084c 2377      	TST  R23
00084d f412      	BRPL __CDF11
00084e 9400      	COM  R0
00084f d136      	RCALL __ANEGD1
                 __CDF11:
000850 2e17      	MOV  R1,R23
000851 e17e      	LDI  R23,30
000852 2011      	TST  R1
                 __CDF12:
000853 f032      	BRMI __CDF13
000854 957a      	DEC  R23
000855 0fee      	LSL  R30
000856 1fff      	ROL  R31
000857 1f66      	ROL  R22
000858 1c11      	ROL  R1
000859 cff9      	RJMP __CDF12
                 __CDF13:
00085a 2fef      	MOV  R30,R31
00085b 2ff6      	MOV  R31,R22
00085c 2d61      	MOV  R22,R1
00085d 935f      	PUSH R21
00085e df8a      	RCALL __REPACK
00085f 915f      	POP  R21
                 __CDF10:
000860 9508      	RET
                 
                 __SWAPACC:
000861 934f      	PUSH R20
000862 01af      	MOVW R20,R30
000863 01fd      	MOVW R30,R26
000864 01da      	MOVW R26,R20
000865 01ab      	MOVW R20,R22
000866 01bc      	MOVW R22,R24
000867 01ca      	MOVW R24,R20
000868 2d40      	MOV  R20,R0
000869 2c01      	MOV  R0,R1
00086a 2e14      	MOV  R1,R20
00086b 914f      	POP  R20
00086c 9508      	RET
                 
                 __UADD12:
00086d 0fea      	ADD  R30,R26
00086e 1ffb      	ADC  R31,R27
00086f 1f68      	ADC  R22,R24
000870 9508      	RET
                 
                 __NEGMAN1:
000871 95e0      	COM  R30
000872 95f0      	COM  R31
000873 9560      	COM  R22
000874 5fef      	SUBI R30,-1
000875 4fff      	SBCI R31,-1
000876 4f6f      	SBCI R22,-1
000877 9508      	RET
                 
                 __SUBF12:
000878 935f      	PUSH R21
000879 df81      	RCALL __UNPACK
00087a 3890      	CPI  R25,0x80
00087b f171      	BREQ __ADDF129
00087c e850      	LDI  R21,0x80
00087d 2615      	EOR  R1,R21
                 
00087e c004      	RJMP __ADDF120
                 
                 __ADDF12:
00087f 935f      	PUSH R21
000880 df7a      	RCALL __UNPACK
000881 3890      	CPI  R25,0x80
000882 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000883 3870      	CPI  R23,0x80
000884 f121      	BREQ __ADDF128
                 __ADDF121:
000885 2f57      	MOV  R21,R23
000886 1b59      	SUB  R21,R25
000887 f12b      	BRVS __ADDF1211
000888 f412      	BRPL __ADDF122
000889 dfd7      	RCALL __SWAPACC
00088a cffa      	RJMP __ADDF121
                 __ADDF122:
00088b 3158      	CPI  R21,24
00088c f018      	BRLO __ADDF123
00088d 27aa      	CLR  R26
00088e 27bb      	CLR  R27
00088f 2788      	CLR  R24
                 __ADDF123:
000890 3058      	CPI  R21,8
000891 f028      	BRLO __ADDF124
000892 2fab      	MOV  R26,R27
000893 2fb8      	MOV  R27,R24
000894 2788      	CLR  R24
000895 5058      	SUBI R21,8
000896 cff9      	RJMP __ADDF123
                 __ADDF124:
000897 2355      	TST  R21
000898 f029      	BREQ __ADDF126
                 __ADDF125:
000899 9586      	LSR  R24
00089a 95b7      	ROR  R27
00089b 95a7      	ROR  R26
00089c 955a      	DEC  R21
00089d f7d9      	BRNE __ADDF125
                 __ADDF126:
00089e 2d50      	MOV  R21,R0
00089f 2551      	EOR  R21,R1
0008a0 f072      	BRMI __ADDF127
0008a1 dfcb      	RCALL __UADD12
0008a2 f438      	BRCC __ADDF129
0008a3 9567      	ROR  R22
0008a4 95f7      	ROR  R31
0008a5 95e7      	ROR  R30
0008a6 9573      	INC  R23
0008a7 f413      	BRVC __ADDF129
0008a8 c020      	RJMP __MAXRES
                 __ADDF128:
0008a9 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0008aa df3e      	RCALL __REPACK
0008ab 915f      	POP  R21
0008ac 9508      	RET
                 __ADDF1211:
0008ad f7d8      	BRCC __ADDF128
0008ae cffb      	RJMP __ADDF129
                 __ADDF127:
0008af 1bea      	SUB  R30,R26
0008b0 0bfb      	SBC  R31,R27
0008b1 0b68      	SBC  R22,R24
0008b2 f051      	BREQ __ZERORES
0008b3 f410      	BRCC __ADDF1210
0008b4 9400      	COM  R0
0008b5 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0008b6 2366      	TST  R22
0008b7 f392      	BRMI __ADDF129
0008b8 0fee      	LSL  R30
0008b9 1fff      	ROL  R31
0008ba 1f66      	ROL  R22
0008bb 957a      	DEC  R23
0008bc f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0008bd 27ee      	CLR  R30
0008be 27ff      	CLR  R31
0008bf 2766      	CLR  R22
0008c0 2777      	CLR  R23
0008c1 915f      	POP  R21
0008c2 9508      	RET
                 
                 __MINRES:
0008c3 efef      	SER  R30
0008c4 efff      	SER  R31
0008c5 e76f      	LDI  R22,0x7F
0008c6 ef7f      	SER  R23
0008c7 915f      	POP  R21
0008c8 9508      	RET
                 
                 __MAXRES:
0008c9 efef      	SER  R30
0008ca efff      	SER  R31
0008cb e76f      	LDI  R22,0x7F
0008cc e77f      	LDI  R23,0x7F
0008cd 915f      	POP  R21
0008ce 9508      	RET
                 
                 __MULF12:
0008cf 935f      	PUSH R21
0008d0 df2a      	RCALL __UNPACK
0008d1 3870      	CPI  R23,0x80
0008d2 f351      	BREQ __ZERORES
0008d3 3890      	CPI  R25,0x80
0008d4 f341      	BREQ __ZERORES
0008d5 2401      	EOR  R0,R1
0008d6 9408      	SEC
0008d7 1f79      	ADC  R23,R25
0008d8 f423      	BRVC __MULF124
0008d9 f31c      	BRLT __ZERORES
                 __MULF125:
0008da 2000      	TST  R0
0008db f33a      	BRMI __MINRES
0008dc cfec      	RJMP __MAXRES
                 __MULF124:
0008dd 920f      	PUSH R0
0008de 931f      	PUSH R17
0008df 932f      	PUSH R18
0008e0 933f      	PUSH R19
0008e1 934f      	PUSH R20
0008e2 2711      	CLR  R17
0008e3 2722      	CLR  R18
0008e4 2799      	CLR  R25
0008e5 9f68      	MUL  R22,R24
0008e6 01a0      	MOVW R20,R0
0008e7 9f8f      	MUL  R24,R31
0008e8 2d30      	MOV  R19,R0
0008e9 0d41      	ADD  R20,R1
0008ea 1f59      	ADC  R21,R25
0008eb 9f6b      	MUL  R22,R27
0008ec 0d30      	ADD  R19,R0
0008ed 1d41      	ADC  R20,R1
0008ee 1f59      	ADC  R21,R25
0008ef 9f8e      	MUL  R24,R30
0008f0 d027      	RCALL __MULF126
0008f1 9fbf      	MUL  R27,R31
0008f2 d025      	RCALL __MULF126
0008f3 9f6a      	MUL  R22,R26
0008f4 d023      	RCALL __MULF126
0008f5 9fbe      	MUL  R27,R30
0008f6 d01d      	RCALL __MULF127
0008f7 9faf      	MUL  R26,R31
0008f8 d01b      	RCALL __MULF127
0008f9 9fae      	MUL  R26,R30
0008fa 0d11      	ADD  R17,R1
0008fb 1f29      	ADC  R18,R25
0008fc 1f39      	ADC  R19,R25
0008fd 1f49      	ADC  R20,R25
0008fe 1f59      	ADC  R21,R25
0008ff 2fe3      	MOV  R30,R19
000900 2ff4      	MOV  R31,R20
000901 2f65      	MOV  R22,R21
000902 2f52      	MOV  R21,R18
000903 914f      	POP  R20
000904 913f      	POP  R19
000905 912f      	POP  R18
000906 911f      	POP  R17
000907 900f      	POP  R0
000908 2366      	TST  R22
000909 f02a      	BRMI __MULF122
00090a 0f55      	LSL  R21
00090b 1fee      	ROL  R30
00090c 1fff      	ROL  R31
00090d 1f66      	ROL  R22
00090e c002      	RJMP __MULF123
                 __MULF122:
00090f 9573      	INC  R23
000910 f24b      	BRVS __MULF125
                 __MULF123:
000911 decd      	RCALL __ROUND_REPACK
000912 915f      	POP  R21
000913 9508      	RET
                 
                 __MULF127:
000914 0d10      	ADD  R17,R0
000915 1d21      	ADC  R18,R1
000916 1f39      	ADC  R19,R25
000917 c002      	RJMP __MULF128
                 __MULF126:
000918 0d20      	ADD  R18,R0
000919 1d31      	ADC  R19,R1
                 __MULF128:
00091a 1f49      	ADC  R20,R25
00091b 1f59      	ADC  R21,R25
00091c 9508      	RET
                 
                 __DIVF21:
00091d 935f      	PUSH R21
00091e dedc      	RCALL __UNPACK
00091f 3870      	CPI  R23,0x80
000920 f421      	BRNE __DIVF210
000921 2011      	TST  R1
                 __DIVF211:
000922 f40a      	BRPL __DIVF219
000923 cf9f      	RJMP __MINRES
                 __DIVF219:
000924 cfa4      	RJMP __MAXRES
                 __DIVF210:
000925 3890      	CPI  R25,0x80
000926 f409      	BRNE __DIVF218
                 __DIVF217:
000927 cf95      	RJMP __ZERORES
                 __DIVF218:
000928 2401      	EOR  R0,R1
000929 9408      	SEC
00092a 0b97      	SBC  R25,R23
00092b f41b      	BRVC __DIVF216
00092c f3d4      	BRLT __DIVF217
00092d 2000      	TST  R0
00092e cff3      	RJMP __DIVF211
                 __DIVF216:
00092f 2f79      	MOV  R23,R25
000930 931f      	PUSH R17
000931 932f      	PUSH R18
000932 933f      	PUSH R19
000933 934f      	PUSH R20
000934 2411      	CLR  R1
000935 2711      	CLR  R17
000936 2722      	CLR  R18
000937 2733      	CLR  R19
000938 2744      	CLR  R20
000939 2755      	CLR  R21
00093a e290      	LDI  R25,32
                 __DIVF212:
00093b 17ae      	CP   R26,R30
00093c 07bf      	CPC  R27,R31
00093d 0786      	CPC  R24,R22
00093e 0741      	CPC  R20,R17
00093f f030      	BRLO __DIVF213
000940 1bae      	SUB  R26,R30
000941 0bbf      	SBC  R27,R31
000942 0b86      	SBC  R24,R22
000943 0b41      	SBC  R20,R17
000944 9408      	SEC
000945 c001      	RJMP __DIVF214
                 __DIVF213:
000946 9488      	CLC
                 __DIVF214:
000947 1f55      	ROL  R21
000948 1f22      	ROL  R18
000949 1f33      	ROL  R19
00094a 1c11      	ROL  R1
00094b 1faa      	ROL  R26
00094c 1fbb      	ROL  R27
00094d 1f88      	ROL  R24
00094e 1f44      	ROL  R20
00094f 959a      	DEC  R25
000950 f751      	BRNE __DIVF212
000951 01f9      	MOVW R30,R18
000952 2d61      	MOV  R22,R1
000953 914f      	POP  R20
000954 913f      	POP  R19
000955 912f      	POP  R18
000956 911f      	POP  R17
000957 2366      	TST  R22
000958 f032      	BRMI __DIVF215
000959 0f55      	LSL  R21
00095a 1fee      	ROL  R30
00095b 1fff      	ROL  R31
00095c 1f66      	ROL  R22
00095d 957a      	DEC  R23
00095e f243      	BRVS __DIVF217
                 __DIVF215:
00095f de7f      	RCALL __ROUND_REPACK
000960 915f      	POP  R21
000961 9508      	RET
                 
                 __CMPF12:
000962 2399      	TST  R25
000963 f09a      	BRMI __CMPF120
000964 2377      	TST  R23
000965 f042      	BRMI __CMPF121
000966 1797      	CP   R25,R23
000967 f048      	BRLO __CMPF122
000968 f429      	BRNE __CMPF121
000969 17ae      	CP   R26,R30
00096a 07bf      	CPC  R27,R31
00096b 0786      	CPC  R24,R22
00096c f020      	BRLO __CMPF122
00096d f031      	BREQ __CMPF123
                 __CMPF121:
00096e 9498      	CLZ
00096f 9488      	CLC
000970 9508      	RET
                 __CMPF122:
000971 9498      	CLZ
000972 9408      	SEC
000973 9508      	RET
                 __CMPF123:
000974 9418      	SEZ
000975 9488      	CLC
000976 9508      	RET
                 __CMPF120:
000977 2377      	TST  R23
000978 f7c2      	BRPL __CMPF122
000979 1797      	CP   R25,R23
00097a f398      	BRLO __CMPF121
00097b f7a9      	BRNE __CMPF122
00097c 17ea      	CP   R30,R26
00097d 07fb      	CPC  R31,R27
00097e 0768      	CPC  R22,R24
00097f f388      	BRLO __CMPF122
000980 f399      	BREQ __CMPF123
000981 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000982 2400      	CLR  R0
000983 0daf      	ADD  R26,R15
000984 1db0      	ADC  R27,R0
000985 9508      	RET
                 
                 __ANEGD1:
000986 95f0      	COM  R31
000987 9560      	COM  R22
000988 9570      	COM  R23
000989 95e1      	NEG  R30
00098a 4fff      	SBCI R31,-1
00098b 4f6f      	SBCI R22,-1
00098c 4f7f      	SBCI R23,-1
00098d 9508      	RET
                 
                 __CBD1:
00098e 2ffe      	MOV  R31,R30
00098f 0fff      	ADD  R31,R31
000990 0bff      	SBC  R31,R31
000991 2f6f      	MOV  R22,R31
000992 2f7f      	MOV  R23,R31
000993 9508      	RET
                 
                 __CWD1:
000994 2f6f      	MOV  R22,R31
000995 0f66      	ADD  R22,R22
000996 0b66      	SBC  R22,R22
000997 2f76      	MOV  R23,R22
000998 9508      	RET
                 
                 __DIVB21U:
000999 2400      	CLR  R0
00099a e098      	LDI  R25,8
                 __DIVB21U1:
00099b 0faa      	LSL  R26
00099c 1c00      	ROL  R0
00099d 1a0e      	SUB  R0,R30
00099e f410      	BRCC __DIVB21U2
00099f 0e0e      	ADD  R0,R30
0009a0 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0009a1 60a1      	SBR  R26,1
                 __DIVB21U3:
0009a2 959a      	DEC  R25
0009a3 f7b9      	BRNE __DIVB21U1
0009a4 2fea      	MOV  R30,R26
0009a5 2da0      	MOV  R26,R0
0009a6 9508      	RET
                 
                 __DIVB21:
0009a7 d039      	RCALL __CHKSIGNB
0009a8 dff0      	RCALL __DIVB21U
0009a9 f40e      	BRTC __DIVB211
0009aa 95e1      	NEG  R30
                 __DIVB211:
0009ab 9508      	RET
                 
                 __DIVD21U:
0009ac 933f      	PUSH R19
0009ad 934f      	PUSH R20
0009ae 935f      	PUSH R21
0009af 2400      	CLR  R0
0009b0 2411      	CLR  R1
0009b1 2744      	CLR  R20
0009b2 2755      	CLR  R21
0009b3 e230      	LDI  R19,32
                 __DIVD21U1:
0009b4 0faa      	LSL  R26
0009b5 1fbb      	ROL  R27
0009b6 1f88      	ROL  R24
0009b7 1f99      	ROL  R25
0009b8 1c00      	ROL  R0
0009b9 1c11      	ROL  R1
0009ba 1f44      	ROL  R20
0009bb 1f55      	ROL  R21
0009bc 1a0e      	SUB  R0,R30
0009bd 0a1f      	SBC  R1,R31
0009be 0b46      	SBC  R20,R22
0009bf 0b57      	SBC  R21,R23
0009c0 f428      	BRCC __DIVD21U2
0009c1 0e0e      	ADD  R0,R30
0009c2 1e1f      	ADC  R1,R31
0009c3 1f46      	ADC  R20,R22
0009c4 1f57      	ADC  R21,R23
0009c5 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0009c6 60a1      	SBR  R26,1
                 __DIVD21U3:
0009c7 953a      	DEC  R19
0009c8 f759      	BRNE __DIVD21U1
0009c9 01fd      	MOVW R30,R26
0009ca 01bc      	MOVW R22,R24
0009cb 01d0      	MOVW R26,R0
0009cc 01ca      	MOVW R24,R20
0009cd 915f      	POP  R21
0009ce 914f      	POP  R20
0009cf 913f      	POP  R19
0009d0 9508      	RET
                 
                 __MODB21:
0009d1 94e8      	CLT
0009d2 ffa7      	SBRS R26,7
0009d3 c002      	RJMP __MODB211
0009d4 95a1      	NEG  R26
0009d5 9468      	SET
                 __MODB211:
0009d6 fde7      	SBRC R30,7
0009d7 95e1      	NEG  R30
0009d8 dfc0      	RCALL __DIVB21U
0009d9 2fea      	MOV  R30,R26
0009da f40e      	BRTC __MODB212
0009db 95e1      	NEG  R30
                 __MODB212:
0009dc 9508      	RET
                 
                 __MODD21U:
0009dd dfce      	RCALL __DIVD21U
0009de 01fd      	MOVW R30,R26
0009df 01bc      	MOVW R22,R24
0009e0 9508      	RET
                 
                 __CHKSIGNB:
0009e1 94e8      	CLT
0009e2 ffe7      	SBRS R30,7
0009e3 c002      	RJMP __CHKSB1
0009e4 95e1      	NEG  R30
0009e5 9468      	SET
                 __CHKSB1:
0009e6 ffa7      	SBRS R26,7
0009e7 c004      	RJMP __CHKSB2
0009e8 95a1      	NEG  R26
0009e9 f800      	BLD  R0,0
0009ea 9403      	INC  R0
0009eb fa00      	BST  R0,0
                 __CHKSB2:
0009ec 9508      	RET
                 
                 __GETW1P:
0009ed 91ed      	LD   R30,X+
0009ee 91fc      	LD   R31,X
0009ef 9711      	SBIW R26,1
0009f0 9508      	RET
                 
                 __GETD1P:
0009f1 91ed      	LD   R30,X+
0009f2 91fd      	LD   R31,X+
0009f3 916d      	LD   R22,X+
0009f4 917c      	LD   R23,X
0009f5 9713      	SBIW R26,3
0009f6 9508      	RET
                 
                 __PUTDP1:
0009f7 93ed      	ST   X+,R30
0009f8 93fd      	ST   X+,R31
0009f9 936d      	ST   X+,R22
0009fa 937c      	ST   X,R23
0009fb 9508      	RET
                 
                 __GETD1S0:
0009fc 81e8      	LD   R30,Y
0009fd 81f9      	LDD  R31,Y+1
0009fe 816a      	LDD  R22,Y+2
0009ff 817b      	LDD  R23,Y+3
000a00 9508      	RET
                 
                 __GETD2S0:
000a01 81a8      	LD   R26,Y
000a02 81b9      	LDD  R27,Y+1
000a03 818a      	LDD  R24,Y+2
000a04 819b      	LDD  R25,Y+3
000a05 9508      	RET
                 
                 __PUTD1S0:
000a06 83e8      	ST   Y,R30
000a07 83f9      	STD  Y+1,R31
000a08 836a      	STD  Y+2,R22
000a09 837b      	STD  Y+3,R23
000a0a 9508      	RET
                 
                 __PUTPARD1:
000a0b 937a      	ST   -Y,R23
000a0c 936a      	ST   -Y,R22
000a0d 93fa      	ST   -Y,R31
000a0e 93ea      	ST   -Y,R30
000a0f 9508      	RET
                 
                 __PUTPARD2:
000a10 939a      	ST   -Y,R25
000a11 938a      	ST   -Y,R24
000a12 93ba      	ST   -Y,R27
000a13 93aa      	ST   -Y,R26
000a14 9508      	RET
                 
                 __SWAPD12:
000a15 2e18      	MOV  R1,R24
000a16 2f86      	MOV  R24,R22
000a17 2d61      	MOV  R22,R1
000a18 2e19      	MOV  R1,R25
000a19 2f97      	MOV  R25,R23
000a1a 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000a1b 2e1b      	MOV  R1,R27
000a1c 2fbf      	MOV  R27,R31
000a1d 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000a1e 2e1a      	MOV  R1,R26
000a1f 2fae      	MOV  R26,R30
000a20 2de1      	MOV  R30,R1
000a21 9508      	RET
                 
                 __CPD10:
000a22 9730      	SBIW R30,0
000a23 4060      	SBCI R22,0
000a24 4070      	SBCI R23,0
000a25 9508      	RET
                 
                 __SAVELOCR6:
000a26 935a      	ST   -Y,R21
                 __SAVELOCR5:
000a27 934a      	ST   -Y,R20
                 __SAVELOCR4:
000a28 933a      	ST   -Y,R19
                 __SAVELOCR3:
000a29 932a      	ST   -Y,R18
                 __SAVELOCR2:
000a2a 931a      	ST   -Y,R17
000a2b 930a      	ST   -Y,R16
000a2c 9508      	RET
                 
                 __LOADLOCR6:
000a2d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000a2e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000a2f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000a30 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000a31 8119      	LDD  R17,Y+1
000a32 8108      	LD   R16,Y
000a33 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   7 r5 :   7 r6 :   4 r7 :   5 
r8 :   2 r9 :   1 r10:   2 r11:   4 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  63 r18:  48 r19:  35 r20:  50 r21:  90 r22: 118 r23: 103 
r24:  77 r25:  62 r26: 221 r27:  98 r28:  31 r29:   1 r30: 447 r31: 156 
x  :  44 y  : 380 z  :  25 
Registers used: 30 out of 35 (85.7%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  34 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   1 break :   0 breq  :  51 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  65 brpl  :   9 brsh  :   8 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 193 
cbi   :  11 cbr   :   3 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  63 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  17 cpc   :  20 cpi   :  84 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   5 inc   :   7 jmp   :  27 ld    :  51 ldd   : 193 ldi   : 232 
lds   :   8 lpm   :  14 lsl   :  14 lsr   :   3 mov   :  95 movw  :  51 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  46 pop   :  22 push  :  22 rcall :  92 ret   :  96 
reti  :   1 rjmp  : 155 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   7 sbic  :   6 sbis  :   4 sbiw  :  31 sbr   :   5 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   1 spm   :   0 
st    : 105 std   :  88 sts   :   6 sub   :   6 subi  :  48 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 84 out of 116 (72.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001468   5144     80   5224   32768  15.9%
[.dseg] 0x000060 0x00027d      0     29     29    2048   1.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
